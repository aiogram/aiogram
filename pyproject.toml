[tool.poetry]
name = "aiogram"
version = "3.0.0-alpha.9"
description = "Modern and fully asynchronous framework for Telegram Bot API"
authors = ["Alex Root Junior <jroot.junior@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://aiogram.dev/"
documentation = "https://docs.aiogram.dev/"
repository = "https://github.com/aiogram/aiogram/"
keywords = [
    "telegram",
    "bot",
    "api",
    "framework",
    "wrapper",
    "asyncio",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Framework :: AsyncIO",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.8"
aiohttp = "^3.7.4"
pydantic = "^1.8.1"
Babel = "^2.9.1"
aiofiles = "^0.6.0"
async_lru = "^1.0.2"
aiohttp-socks = { version = "^0.5.5", optional = true }
aioredis = { version = "^2.0.0a1", allow-prereleases = true, optional = true }
typing-extensions = { version = "^3.7.4", python = "<3.8" }
magic-filter = { version = "1.0.0a1", allow-prereleases = true }
sphinx = { version = "^3.1.0", optional = true }
sphinx-intl = { version = "^2.0.1", optional = true }
sphinx-autobuild = { version = "^2020.9.1", optional = true }
sphinx-copybutton = { version = "^0.3.1", optional = true }
furo = { version = "^2020.11.15-beta.17", optional = true }
sphinx-prompt = { version = "^1.3.0", optional = true }
Sphinx-Substitution-Extensions = { version = "^2020.9.30", optional = true }

[tool.poetry.dev-dependencies]
aiohttp-socks = "^0.5"
aioredis = { version = "^2.0.0a1", allow-prereleases = true }
ipython = "^7.22.0"
uvloop = { version = "^0.15.2", markers = "sys_platform == 'darwin' or sys_platform == 'linux'" }
black = "^21.4b2"
isort = "^5.8.0"
flake8 = "^3.9.1"
flake8-html = "^0.4.1"
mypy = "^0.812"
pytest = "^6.2.3"
pytest-html = "^3.1.1"
pytest-asyncio = "^0.15.1"
pytest-mypy = "^0.8.1"
pytest-mock = "^3.6.0"
pytest-cov = "^2.11.1"
aresponses = "^2.1.4"
asynctest = "^0.13.0"
toml = "^0.10.2"
pygments = "^2.4"
pymdown-extensions = "^8.0"
markdown-include = "^0.6"
pre-commit = "^2.3.0"
packaging = "^20.3"
typing-extensions = "^3.7.4"
sphinx = "^3.1.0"
sphinx-intl = "^2.0.1"
sphinx-autobuild = "^2020.9.1"
sphinx-copybutton = "^0.3.1"
furo = "^2020.11.15-beta.17"
sphinx-prompt = "^1.3.0"
Sphinx-Substitution-Extensions = "^2020.9.30"
pytest-lazy-fixture = "^0.6.3"

[tool.poetry.extras]
fast = ["uvloop"]
redis = ["aioredis"]
proxy = ["aiohttp-socks"]
docs = [
    "sphinx",
    "sphinx-intl",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "furo",
    "black",
    "sphinx-prompt",
    "Sphinx-Substitution-Extensions",
]

[tool.black]
line-length = 99
target-version = ['py37', 'py38']
exclude = '''
(
    \.eggs
  | \.git
  | \.tox
  | build
  | dist
  | venv
  | docs
)
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 99
known_third_party = [
    "aiofiles",
    "aiohttp",
    "aiohttp_socks",
    "aresponses",
    "async_lru",
    "packaging",
    "pkg_resources",
    "pydantic",
    "pytest"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
