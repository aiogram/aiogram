# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 20:35+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../dispatcher/filters/command.rst:3
msgid "Command"
msgstr ""

#: ../../dispatcher/filters/command.rst:10
msgid ""
"When filter is passed the :class:`aiogram.filters.command.CommandObject` "
"will be passed to the handler argument :code:`command`"
msgstr ""

#: ../../dispatcher/filters/command.rst:19
msgid "Usage"
msgstr ""

#: ../../dispatcher/filters/command.rst:21
msgid "Filter single variant of commands: :code:`Command(\"start\")`"
msgstr ""

#: ../../dispatcher/filters/command.rst:22
msgid ""
"Handle command by regexp pattern: "
":code:`Command(re.compile(r\"item_(\\d+)\"))`"
msgstr ""

#: ../../dispatcher/filters/command.rst:23
msgid ""
"Match command by multiple variants: :code:`Command(\"item\", "
"re.compile(r\"item_(\\d+)\"))`"
msgstr ""

#: ../../dispatcher/filters/command.rst:24
msgid ""
"Handle commands in public chats intended for other bots: "
":code:`Command(\"command\", ignore_mention=True)`"
msgstr ""

#: ../../dispatcher/filters/command.rst:25
msgid ""
"Use :class:`aiogram.types.bot_command.BotCommand` object as command "
"reference :code:`Command(BotCommand(command=\"command\", description=\"My"
" awesome command\")`"
msgstr ""

#: ../../dispatcher/filters/command.rst:29
msgid "Command cannot include spaces or any whitespace"
msgstr ""

#: ../../dispatcher/filters/command.rst:32
msgid "Allowed handlers"
msgstr ""

#: ../../dispatcher/filters/command.rst:34
msgid "Allowed update types for this filter:"
msgstr ""

#: ../../dispatcher/filters/command.rst:36
msgid "`message`"
msgstr ""

#: ../../dispatcher/filters/command.rst:37
msgid "`edited_message`"
msgstr ""

#~ msgid ""
#~ "This filter can be helpful for "
#~ "handling commands from the text "
#~ "messages."
#~ msgstr ""

#~ msgid ""
#~ "Works only with "
#~ ":class:`aiogram.types.message.Message` events which "
#~ "have the :code:`text`."
#~ msgstr ""

#~ msgid "List of commands (string or compiled regexp patterns)"
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid ""
#~ "Prefix for command. Prefix is always "
#~ "a single char but here you can "
#~ "pass all of allowed prefixes, for "
#~ "example: :code:`\"/!\"` will work with "
#~ "commands prefixed by :code:`\"/\"` or "
#~ ":code:`\"!\"`."
#~ msgstr ""

#~ msgid "Ignore case (Does not work with regexp, use flags instead)"
#~ msgstr ""

#~ msgid ""
#~ "Ignore bot mention. By default, bot "
#~ "can not handle commands intended for "
#~ "other bots"
#~ msgstr ""

#~ msgid "Validate command object via Magic filter after all checks done"
#~ msgstr ""

#~ msgid ""
#~ "Instance of this object is always "
#~ "has command and it prefix. Can be"
#~ " passed as keyword argument **command** "
#~ "to the handler"
#~ msgstr ""

#~ msgid "Command prefix"
#~ msgstr ""

#~ msgid "Command without prefix and mention"
#~ msgstr ""

#~ msgid "Mention (if available)"
#~ msgstr ""

#~ msgid "Command argument"
#~ msgstr ""

#~ msgid ""
#~ "Will be presented match result if "
#~ "the command is presented as regexp "
#~ "in filter"
#~ msgstr ""

#~ msgid "This command has mention?"
#~ msgstr ""

#~ msgid "Generate original text from object"
#~ msgstr ""

