# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 20:35+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../dispatcher/observer.rst:3
msgid "Observer"
msgstr ""

#: ../../dispatcher/observer.rst:5
msgid ""
"Observer is used for filtering and handling different events. That is "
"part of internal API with some public methods and is recommended to don't"
" use methods is not listed here."
msgstr ""

#: ../../dispatcher/observer.rst:7
msgid "In `aiogram` framework is available two variants of observer:"
msgstr ""

#: ../../dispatcher/observer.rst:9
msgid "`EventObserver <#eventobserver>`__"
msgstr ""

#: ../../dispatcher/observer.rst:10
msgid "`TelegramEventObserver <#telegrameventobserver>`__"
msgstr ""

#: ../../dispatcher/observer.rst:14
msgid "EventObserver"
msgstr ""

#: ../../dispatcher/observer.rst:22
msgid "TelegramEventObserver"
msgstr ""

#~ msgid ""
#~ "Here you can register handler with "
#~ "filters or bounded filters which can "
#~ "be used as keyword arguments instead "
#~ "of writing full references when you "
#~ "register new handlers. This observer "
#~ "will stop event propagation when first"
#~ " handler is pass."
#~ msgstr ""

#~ msgid "Simple events observer"
#~ msgstr ""

#~ msgid ""
#~ "Is used for managing events is not"
#~ " related with Telegram (For example "
#~ "startup/shutdown processes)"
#~ msgstr ""

#~ msgid "Handlers can be registered via decorator or method"
#~ msgstr ""

#~ msgid "Register callback with filters"
#~ msgstr ""

#~ msgid ""
#~ "Propagate event to handlers. Handler "
#~ "will be called when all its "
#~ "filters is pass."
#~ msgstr ""

#~ msgid "Decorator for registering event handlers"
#~ msgstr ""

#~ msgid "Event observer for Telegram events"
#~ msgstr ""

#~ msgid ""
#~ "Here you can register handler with "
#~ "filter. This observer will stop event"
#~ " propagation when first handler is "
#~ "pass."
#~ msgstr ""

#~ msgid "Register event handler"
#~ msgstr ""

#~ msgid ""
#~ "Propagate event to handlers and stops"
#~ " propagation on first match. Handler "
#~ "will be called when all its "
#~ "filters is pass."
#~ msgstr ""

