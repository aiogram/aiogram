# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-02 15:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../api/upload_file.rst:5
msgid "How to upload file?"
msgstr ""

#: ../../api/upload_file.rst:7
msgid ""
"As says `official Telegram Bot API documentation "
"<https://core.telegram.org/bots/api#sending-files>`_ there are three ways"
" to send files (photos, stickers, audio, media, etc.):"
msgstr ""

#: ../../api/upload_file.rst:10
msgid ""
"If the file is already stored somewhere on the Telegram servers or file "
"is available by the URL, you don't need to reupload it."
msgstr ""

#: ../../api/upload_file.rst:13
msgid ""
"But if you need to upload a new file just use subclasses of `InputFile "
"<types/input_file.html>`__."
msgstr ""

#: ../../api/upload_file.rst:15
msgid "Here are the three different available builtin types of input file:"
msgstr ""

#: ../../api/upload_file.rst:17
msgid ""
":class:`aiogram.types.input_file.FSInputFile` - `uploading from file "
"system <#upload-from-file-system>`__"
msgstr ""

#: ../../api/upload_file.rst:18
msgid ""
":class:`aiogram.types.input_file.BufferedInputFile` - `uploading from "
"buffer <#upload-from-buffer>`__"
msgstr ""

#: ../../api/upload_file.rst:19
msgid ""
":class:`aiogram.types.input_file.URLInputFile` - `uploading from URL "
"<#upload-from-url>`__"
msgstr ""

#: ../../api/upload_file.rst:23
msgid "**Be respectful with Telegram**"
msgstr ""

#: ../../api/upload_file.rst:25
msgid ""
"Instances of `InputFile` are reusable. That's mean you can create "
"instance of InputFile and sent this file multiple times but Telegram does"
" not recommend to do that and when you upload file once just save their "
"`file_id` and use it in next times."
msgstr ""

#: ../../api/upload_file.rst:31
msgid "Upload from file system"
msgstr ""

#: ../../api/upload_file.rst:33
msgid "By first step you will need to import InputFile wrapper:"
msgstr ""

#: ../../api/upload_file.rst:39
msgid "Then you can use it:"
msgstr ""

#: aiogram.types.input_file.BufferedInputFile.__init__:1
#: aiogram.types.input_file.FSInputFile.__init__:1 of
msgid "Represents object for uploading files from filesystem"
msgstr ""

#: aiogram.types.input_file.BufferedInputFile.__init__
#: aiogram.types.input_file.FSInputFile.__init__ of
msgid "Parameters"
msgstr ""

#: aiogram.types.input_file.FSInputFile.__init__:3 of
msgid "Path to file"
msgstr ""

#: aiogram.types.input_file.FSInputFile.__init__:4 of
msgid ""
"Filename to be propagated to telegram. By default, will be parsed from "
"path"
msgstr ""

#: aiogram.types.input_file.BufferedInputFile.__init__:5
#: aiogram.types.input_file.FSInputFile.__init__:6 of
msgid "Uploading chunk size"
msgstr ""

#: ../../api/upload_file.rst:52
msgid "Upload from buffer"
msgstr ""

#: ../../api/upload_file.rst:54
msgid ""
"Files can be also passed from buffer (For example you generate image "
"using `Pillow <https://pillow.readthedocs.io/en/stable/>`_ and you want "
"to send it to Telegram):"
msgstr ""

#: ../../api/upload_file.rst:58 ../../api/upload_file.rst:80
msgid "Import wrapper:"
msgstr ""

#: ../../api/upload_file.rst:64 ../../api/upload_file.rst:86
msgid "And then you can use it:"
msgstr ""

#: aiogram.types.input_file.BufferedInputFile.__init__:3 of
msgid "Bytes"
msgstr ""

#: aiogram.types.input_file.BufferedInputFile.__init__:4 of
msgid "Filename to be propagated to telegram."
msgstr ""

#: ../../api/upload_file.rst:74
msgid "Upload from url"
msgstr ""

#: ../../api/upload_file.rst:76
msgid ""
"If you need to upload a file from another server, but the direct link is "
"bound to your server's IP, or you want to bypass native `upload limits "
"<https://core.telegram.org/bots/api#sending-files>`_ by URL, you can use "
":obj:`aiogram.types.input_file.URLInputFile`."
msgstr ""

#~ msgid "Create buffer from file"
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "instance of :obj:`BufferedInputFile`"
#~ msgstr ""

#~ msgid ""
#~ "But if you need to upload new "
#~ "file just use subclasses of `InputFile"
#~ " <types/input_file.md>`__."
#~ msgstr ""

#~ msgid "Here is available three different builtin types of input file:"
#~ msgstr ""

#~ msgid ""
#~ "Instances of `InputFile` is reusable. "
#~ "That's mean you can create instance "
#~ "of InputFile and sent this file "
#~ "multiple times but Telegram is not "
#~ "recommend to do that and when you"
#~ " upload file once just save their "
#~ "`file_id` and use it in next "
#~ "times."
#~ msgstr ""

#~ msgid ""
#~ "Files can be also passed from "
#~ "buffer (For example you generate image"
#~ " using `Pillow "
#~ "<https://pillow.readthedocs.io/en/stable/>`_ and the "
#~ "want's to sent it to the "
#~ "Telegram):"
#~ msgstr ""

#~ msgid ""
#~ "But if you need to upload a "
#~ "new file just use subclasses of "
#~ "`InputFile <types/input_file.md>`__."
#~ msgstr ""
