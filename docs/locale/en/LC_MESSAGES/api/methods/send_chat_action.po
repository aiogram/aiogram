# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 22:28+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../api/methods/send_chat_action.rst:3
msgid "sendChatAction"
msgstr ""

#: ../../api/methods/send_chat_action.rst:5
msgid "Returns: :obj:`bool`"
msgstr ""

#: aiogram.methods.send_chat_action.SendChatAction:1 of
msgid ""
"Use this method when you need to tell the user that something is "
"happening on the bot's side. The status is set for 5 seconds or less "
"(when a message arrives from your bot, Telegram clients clear its typing "
"status). Returns :code:`True` on success."
msgstr ""

#: aiogram.methods.send_chat_action.SendChatAction:3 of
msgid ""
"Example: The `ImageBot <https://t.me/imagebot>`_ needs some time to "
"process a request and upload the image. Instead of sending a text message"
" along the lines of 'Retrieving image, please waitâ€¦', the bot may use "
":class:`aiogram.methods.send_chat_action.SendChatAction` with *action* = "
"*upload_photo*. The user will see a 'sending photo' status for the bot."
msgstr ""

#: aiogram.methods.send_chat_action.SendChatAction:5 of
msgid ""
"We only recommend using this method when a response from the bot will "
"take a **noticeable** amount of time to arrive."
msgstr ""

#: aiogram.methods.send_chat_action.SendChatAction:7 of
msgid "Source: https://core.telegram.org/bots/api#sendchataction"
msgstr ""

#: ../../docstring aiogram.methods.send_chat_action.SendChatAction.chat_id:1 of
msgid ""
"Unique identifier for the target chat or username of the target channel "
"(in the format :code:`@channelusername`)"
msgstr ""

#: ../../docstring aiogram.methods.send_chat_action.SendChatAction.action:1 of
msgid ""
"Type of action to broadcast. Choose one, depending on what the user is "
"about to receive: *typing* for `text messages "
"<https://core.telegram.org/bots/api#sendmessage>`_, *upload_photo* for "
"`photos <https://core.telegram.org/bots/api#sendphoto>`_, *record_video* "
"or *upload_video* for `videos "
"<https://core.telegram.org/bots/api#sendvideo>`_, *record_voice* or "
"*upload_voice* for `voice notes "
"<https://core.telegram.org/bots/api#sendvoice>`_, *upload_document* for "
"`general files <https://core.telegram.org/bots/api#senddocument>`_, "
"*choose_sticker* for `stickers "
"<https://core.telegram.org/bots/api#sendsticker>`_, *find_location* for "
"`location data <https://core.telegram.org/bots/api#sendlocation>`_, "
"*record_video_note* or *upload_video_note* for `video notes "
"<https://core.telegram.org/bots/api#sendvideonote>`_."
msgstr ""

#: ../../docstring
#: aiogram.methods.send_chat_action.SendChatAction.message_thread_id:1 of
msgid "Unique identifier for the target message thread; supergroups only"
msgstr ""

#: ../../api/methods/send_chat_action.rst:14
msgid "Usage"
msgstr ""

#: ../../api/methods/send_chat_action.rst:17
msgid "As bot method"
msgstr ""

#: ../../api/methods/send_chat_action.rst:25
msgid "Method as object"
msgstr ""

#: ../../api/methods/send_chat_action.rst:27
msgid "Imports:"
msgstr ""

#: ../../api/methods/send_chat_action.rst:29
msgid ":code:`from aiogram.methods.send_chat_action import SendChatAction`"
msgstr ""

#: ../../api/methods/send_chat_action.rst:30
msgid "alias: :code:`from aiogram.methods import SendChatAction`"
msgstr ""

#: ../../api/methods/send_chat_action.rst:33
msgid "With specific bot"
msgstr ""

#: ../../api/methods/send_chat_action.rst:40
msgid "As reply into Webhook in handler"
msgstr ""

#: ../../api/methods/send_chat_action.rst:48
msgid "As shortcut from received object"
msgstr ""

#: ../../api/methods/send_chat_action.rst:50
msgid ":meth:`aiogram.types.chat.Chat.do`"
msgstr ""
