# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-01 22:51+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../api/types/callback_query.rst:3
msgid "CallbackQuery"
msgstr ""

#: aiogram.types.callback_query.CallbackQuery:1 of
msgid ""
"This object represents an incoming callback query from a callback button "
"in an `inline keyboard <https://core.telegram.org/bots#inline-keyboards-"
"and-on-the-fly-updating>`_. If the button that originated the query was "
"attached to a message sent by the bot, the field *message* will be "
"present. If the button was attached to a message sent via the bot (in "
"`inline mode <https://core.telegram.org/bots/api#inline-mode>`_), the "
"field *inline_message_id* will be present. Exactly one of the fields "
"*data* or *game_short_name* will be present."
msgstr ""

#: aiogram.types.callback_query.CallbackQuery:3 of
msgid ""
"**NOTE:** After the user presses a callback button, Telegram clients will"
" display a progress bar until you call "
":class:`aiogram.methods.answer_callback_query.AnswerCallbackQuery`. It "
"is, therefore, necessary to react by calling "
":class:`aiogram.methods.answer_callback_query.AnswerCallbackQuery` even "
"if no notification to the user is needed (e.g., without specifying any of"
" the optional parameters)."
msgstr ""

#: aiogram.types.callback_query.CallbackQuery:5 of
msgid "Source: https://core.telegram.org/bots/api#callbackquery"
msgstr ""

#: ../../docstring aiogram.types.callback_query.CallbackQuery.id:1 of
msgid "Unique identifier for this query"
msgstr ""

#: ../../docstring aiogram.types.callback_query.CallbackQuery.from_user:1 of
msgid "Sender"
msgstr ""

#: ../../docstring aiogram.types.callback_query.CallbackQuery.chat_instance:1
#: of
msgid ""
"Global identifier, uniquely corresponding to the chat to which the "
"message with the callback button was sent. Useful for high scores in "
":class:`aiogram.methods.games.Games`."
msgstr ""

#: ../../docstring aiogram.types.callback_query.CallbackQuery.message:1 of
msgid ""
"*Optional*. Message with the callback button that originated the query. "
"Note that message content and message date will not be available if the "
"message is too old"
msgstr ""

#: ../../docstring
#: aiogram.types.callback_query.CallbackQuery.inline_message_id:1 of
msgid ""
"*Optional*. Identifier of the message sent via the bot in inline mode, "
"that originated the query."
msgstr ""

#: ../../docstring aiogram.types.callback_query.CallbackQuery.data:1 of
msgid ""
"*Optional*. Data associated with the callback button. Be aware that the "
"message originated the query can contain no callback buttons with this "
"data."
msgstr ""

#: ../../docstring aiogram.types.callback_query.CallbackQuery.game_short_name:1
#: of
msgid ""
"*Optional*. Short name of a `Game "
"<https://core.telegram.org/bots/api#games>`_ to be returned, serves as "
"the unique identifier for the game"
msgstr ""

#: aiogram.types.callback_query.CallbackQuery.answer:1 of
msgid "Answer to callback query"
msgstr ""

#: aiogram.types.callback_query.CallbackQuery.answer of
msgid "Parameters"
msgstr ""

#: aiogram.types.callback_query.CallbackQuery.answer of
msgid "Returns"
msgstr ""
