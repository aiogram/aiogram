# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 20:35+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../utils/web_app.rst:3
msgid "WebApp"
msgstr ""

#: ../../utils/web_app.rst:5
msgid ""
"Telegram Bot API 6.0 announces a revolution in the development of "
"chatbots using WebApp feature."
msgstr ""

#: ../../utils/web_app.rst:7
msgid ""
"You can read more details on it in the official `blog "
"<https://telegram.org/blog/notifications-bots#bot-revolution>`_ and "
"`documentation <https://core.telegram.org/bots/webapps>`_."
msgstr ""

#: ../../utils/web_app.rst:10
msgid ""
"`aiogram` implements simple utils to remove headache with the data "
"validation from Telegram WebApp on the backend side."
msgstr ""

#: ../../utils/web_app.rst:13
msgid "Usage"
msgstr ""

#: ../../utils/web_app.rst:15
msgid ""
"For example from frontend you will pass :code:`application/x-www-form-"
"urlencoded` POST request with :code:`_auth` field in body and wants to "
"return User info inside response as :code:`application/json`"
msgstr ""

#: ../../utils/web_app.rst:35
msgid "Functions"
msgstr ""

#: aiogram.utils.web_app.check_webapp_signature:1 of
msgid "Check incoming WebApp init data signature"
msgstr ""

#: aiogram.utils.web_app.check_webapp_signature:3 of
msgid ""
"Source: https://core.telegram.org/bots/webapps#validating-data-received-"
"via-the-web-app"
msgstr ""

#: aiogram.utils.web_app.check_webapp_signature
#: aiogram.utils.web_app.safe_parse_webapp_init_data of
msgid "Parameters"
msgstr ""

#: aiogram.utils.web_app.check_webapp_signature
#: aiogram.utils.web_app.safe_parse_webapp_init_data of
msgid "Returns"
msgstr ""

#: aiogram.utils.web_app.safe_parse_webapp_init_data:1 of
msgid "Validate WebApp init data and return it as dict"
msgstr ""

#: ../../utils/web_app.rst:45
msgid "Types"
msgstr ""

#~ msgid "bot Token"
#~ msgstr ""

#~ msgid "data from frontend to be validated"
#~ msgstr ""

#~ msgid "Parse WebApp init data and return it as WebAppInitData object"
#~ msgstr ""

#~ msgid ""
#~ "This method doesn't make any security"
#~ " check, so you shall not trust "
#~ "to this data, use "
#~ ":code:`safe_parse_webapp_init_data` instead."
#~ msgstr ""

#~ msgid "data from frontend to be parsed"
#~ msgstr ""

#~ msgid "Validate raw WebApp init data and return it as WebAppInitData object"
#~ msgstr ""

#~ msgid "Raise :obj:`ValueError` when data is invalid"
#~ msgstr ""

#~ msgid "bot token"
#~ msgstr ""

#~ msgid "data from frontend to be parsed and validated"
#~ msgstr ""

#~ msgid ""
#~ "This object contains data that is "
#~ "transferred to the Web App when it"
#~ " is opened. It is empty if the"
#~ " Web App was launched from a "
#~ "keyboard button."
#~ msgstr ""

#~ msgid "Source: https://core.telegram.org/bots/webapps#webappinitdata"
#~ msgstr ""

#~ msgid ""
#~ "A unique identifier for the Web "
#~ "App session, required for sending "
#~ "messages via the answerWebAppQuery method."
#~ msgstr ""

#~ msgid "An object containing data about the current user."
#~ msgstr ""

#~ msgid ""
#~ "An object containing data about the "
#~ "chat partner of the current user "
#~ "in the chat where the bot was "
#~ "launched via the attachment menu. "
#~ "Returned only for Web Apps launched "
#~ "via the attachment menu."
#~ msgstr ""

#~ msgid ""
#~ "The value of the startattach parameter,"
#~ " passed via link. Only returned for"
#~ " Web Apps when launched from the "
#~ "attachment menu via link. The value "
#~ "of the start_param parameter will also"
#~ " be passed in the GET-parameter "
#~ "tgWebAppStartParam, so the Web App can"
#~ " load the correct interface right "
#~ "away."
#~ msgstr ""

#~ msgid "Unix time when the form was opened."
#~ msgstr ""

#~ msgid ""
#~ "A hash of all passed parameters, "
#~ "which the bot server can use to"
#~ " check their validity."
#~ msgstr ""

#~ msgid "This object contains the data of the Web App user."
#~ msgstr ""

#~ msgid "Source: https://core.telegram.org/bots/webapps#webappuser"
#~ msgstr ""

#~ msgid ""
#~ "A unique identifier for the user "
#~ "or bot. This number may have more"
#~ " than 32 significant bits and some"
#~ " programming languages may have "
#~ "difficulty/silent defects in interpreting it."
#~ " It has at most 52 significant "
#~ "bits, so a 64-bit integer or a "
#~ "double-precision float type is safe "
#~ "for storing this identifier."
#~ msgstr ""

#~ msgid "True, if this user is a bot. Returns in the receiver field only."
#~ msgstr ""

#~ msgid "First name of the user or bot."
#~ msgstr ""

#~ msgid "Last name of the user or bot."
#~ msgstr ""

#~ msgid "Username of the user or bot."
#~ msgstr ""

#~ msgid "IETF language tag of the user's language. Returns in user field only."
#~ msgstr ""

#~ msgid ""
#~ "URL of the userâ€™s profile photo. "
#~ "The photo can be in .jpeg or "
#~ ".svg formats. Only returned for Web "
#~ "Apps launched from the attachment menu."
#~ msgstr ""

