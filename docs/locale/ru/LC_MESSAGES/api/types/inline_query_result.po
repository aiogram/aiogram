# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 16:59+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ru\n"
"Language-Team: ru <LL@li.org>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/types/inline_query_result.rst:3
msgid "InlineQueryResult"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResult:1 of
msgid "This object represents one result of an inline query."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResult:3 of
msgid "Telegram clients currently support results of the following 20 types"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResult:5 of
msgid "https://core.telegram.org/bots/api#inlinequeryresult"
msgstr ""

#: ../../docstring aiogram.types.inline_query_result.InlineQueryResult.id:1
#: aiogram.types.inline_query_result.InlineQueryResult.reply_markup:1
#: aiogram.types.inline_query_result.InlineQueryResultArticle.description:1
#: aiogram.types.inline_query_result.InlineQueryResultArticle.hide_url:1
#: aiogram.types.inline_query_result.InlineQueryResultArticle.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultArticle.thumb_height:1
#: aiogram.types.inline_query_result.InlineQueryResultArticle.thumb_url:1
#: aiogram.types.inline_query_result.InlineQueryResultArticle.thumb_width:1
#: aiogram.types.inline_query_result.InlineQueryResultArticle.title:1
#: aiogram.types.inline_query_result.InlineQueryResultArticle.type:1
#: aiogram.types.inline_query_result.InlineQueryResultArticle.url:1
#: aiogram.types.inline_query_result.InlineQueryResultAudio.audio_duration:1
#: aiogram.types.inline_query_result.InlineQueryResultAudio.audio_url:1
#: aiogram.types.inline_query_result.InlineQueryResultAudio.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultAudio.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultAudio.performer:1
#: aiogram.types.inline_query_result.InlineQueryResultAudio.title:1
#: aiogram.types.inline_query_result.InlineQueryResultAudio.type:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedAudio.audio_file_id:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedAudio.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedAudio.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedAudio.type:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedDocument.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedDocument.description:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedDocument.document_file_id:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedDocument.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedDocument.title:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedDocument.type:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedGif.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedGif.gif_file_id:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedGif.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedGif.title:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedGif.type:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedMpeg4Gif.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedMpeg4Gif.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedMpeg4Gif.mpeg4_file_id:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedMpeg4Gif.title:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedMpeg4Gif.type:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedPhoto.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedPhoto.description:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedPhoto.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedPhoto.photo_file_id:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedPhoto.title:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedPhoto.type:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedSticker.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedSticker.sticker_file_id:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedSticker.type:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVideo.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVideo.description:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVideo.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVideo.title:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVideo.type:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVideo.video_file_id:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVoice.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVoice.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVoice.title:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVoice.type:1
#: aiogram.types.inline_query_result.InlineQueryResultCachedVoice.voice_file_id:1
#: aiogram.types.inline_query_result.InlineQueryResultContact.first_name:1
#: aiogram.types.inline_query_result.InlineQueryResultContact.foursquare_type:1
#: aiogram.types.inline_query_result.InlineQueryResultContact.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultContact.last_name:1
#: aiogram.types.inline_query_result.InlineQueryResultContact.phone_number:1
#: aiogram.types.inline_query_result.InlineQueryResultContact.thumb_height:1
#: aiogram.types.inline_query_result.InlineQueryResultContact.thumb_url:1
#: aiogram.types.inline_query_result.InlineQueryResultContact.thumb_width:1
#: aiogram.types.inline_query_result.InlineQueryResultContact.type:1
#: aiogram.types.inline_query_result.InlineQueryResultContact.vcard:1
#: aiogram.types.inline_query_result.InlineQueryResultDocument.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultDocument.description:1
#: aiogram.types.inline_query_result.InlineQueryResultDocument.document_url:1
#: aiogram.types.inline_query_result.InlineQueryResultDocument.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultDocument.mime_type:1
#: aiogram.types.inline_query_result.InlineQueryResultDocument.thumb_height:1
#: aiogram.types.inline_query_result.InlineQueryResultDocument.thumb_url:1
#: aiogram.types.inline_query_result.InlineQueryResultDocument.thumb_width:1
#: aiogram.types.inline_query_result.InlineQueryResultDocument.title:1
#: aiogram.types.inline_query_result.InlineQueryResultDocument.type:1
#: aiogram.types.inline_query_result.InlineQueryResultGame.game_short_name:1
#: aiogram.types.inline_query_result.InlineQueryResultGame.type:1
#: aiogram.types.inline_query_result.InlineQueryResultGif.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultGif.gif_duration:1
#: aiogram.types.inline_query_result.InlineQueryResultGif.gif_height:1
#: aiogram.types.inline_query_result.InlineQueryResultGif.gif_url:1
#: aiogram.types.inline_query_result.InlineQueryResultGif.gif_width:1
#: aiogram.types.inline_query_result.InlineQueryResultGif.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultGif.thumb_mime_type:1
#: aiogram.types.inline_query_result.InlineQueryResultGif.thumb_url:1
#: aiogram.types.inline_query_result.InlineQueryResultGif.title:1
#: aiogram.types.inline_query_result.InlineQueryResultGif.type:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.heading:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.horizontal_accuracy:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.latitude:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.live_period:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.longitude:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.proximity_alert_radius:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.thumb_height:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.thumb_url:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.thumb_width:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.title:1
#: aiogram.types.inline_query_result.InlineQueryResultLocation.type:1
#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif.mpeg4_duration:1
#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif.mpeg4_height:1
#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif.mpeg4_url:1
#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif.mpeg4_width:1
#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif.thumb_mime_type:1
#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif.thumb_url:1
#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif.title:1
#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif.type:1
#: aiogram.types.inline_query_result.InlineQueryResultPhoto.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultPhoto.description:1
#: aiogram.types.inline_query_result.InlineQueryResultPhoto.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultPhoto.photo_height:1
#: aiogram.types.inline_query_result.InlineQueryResultPhoto.photo_url:1
#: aiogram.types.inline_query_result.InlineQueryResultPhoto.photo_width:1
#: aiogram.types.inline_query_result.InlineQueryResultPhoto.thumb_url:1
#: aiogram.types.inline_query_result.InlineQueryResultPhoto.title:1
#: aiogram.types.inline_query_result.InlineQueryResultPhoto.type:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.address:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.foursquare_id:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.foursquare_type:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.google_place_id:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.google_place_type:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.latitude:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.longitude:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.thumb_height:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.thumb_url:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.thumb_width:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.title:1
#: aiogram.types.inline_query_result.InlineQueryResultVenue.type:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.description:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.mime_type:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.thumb_url:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.title:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.type:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.video_duration:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.video_height:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.video_url:1
#: aiogram.types.inline_query_result.InlineQueryResultVideo.video_width:1
#: aiogram.types.inline_query_result.InlineQueryResultVoice.caption:1
#: aiogram.types.inline_query_result.InlineQueryResultVoice.input_message_content:1
#: aiogram.types.inline_query_result.InlineQueryResultVoice.title:1
#: aiogram.types.inline_query_result.InlineQueryResultVoice.type:1
#: aiogram.types.inline_query_result.InlineQueryResultVoice.voice_duration:1
#: aiogram.types.inline_query_result.InlineQueryResultVoice.voice_url:1 of
msgid "Simple field"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultArticle:1 of
msgid "Represents a link to an article or web page."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultArticle:3 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultarticle"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultPhoto:1 of
msgid "Represents a link to a photo."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultPhoto:3 of
msgid ""
"By default, this photo will be sent by the user with optional caption. "
"Alternatively, you can use input_message_content to send a message with "
"the specified content instead of the photo."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultPhoto:7 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultphoto"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultGif:1 of
msgid "Represents a link to an animated GIF file."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultGif:3 of
msgid ""
"By default, this animated GIF file will be sent by the user with optional"
" caption. Alternatively, you can use input_message_content to send a "
"message with the specified content instead of the animation."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultGif:7 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultgif"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif:1 of
msgid ""
"Represents a link to a video animation (H.264/MPEG-4 AVC video without "
"sound)."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif:3 of
msgid ""
"By default, this animated MPEG-4 file will be sent by the user with "
"optional caption. Alternatively, you can use input_message_content to "
"send a message with the specified content instead of the animation."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultMpeg4Gif:7 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultmpeg4gif"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultVideo:1 of
msgid ""
"Represents a link to a page containing an embedded video player or a "
"video file."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedVideo:3
#: aiogram.types.inline_query_result.InlineQueryResultVideo:3 of
msgid ""
"By default, this video file will be sent by the user with an optional "
"caption. Alternatively, you can use input_message_content to send a "
"message with the specified content instead of the video."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultVideo:7 of
msgid ""
"If an InlineQueryResultVideo message contains an embedded video (e.g., "
"YouTube), you must replace its content using input_message_content."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultVideo:10 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultvideo"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultAudio:1 of
msgid ""
"Represents a link to an mp3 audio file. By default, this audio file will "
"be sent by the user. Alternatively, you can use input_message_content to "
"send a message with the specified content instead of the audio."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultAudio:5
#: aiogram.types.inline_query_result.InlineQueryResultCachedAudio:7
#: aiogram.types.inline_query_result.InlineQueryResultCachedDocument:6
#: aiogram.types.inline_query_result.InlineQueryResultCachedSticker:7
#: aiogram.types.inline_query_result.InlineQueryResultCachedVoice:7
#: aiogram.types.inline_query_result.InlineQueryResultContact:7
#: aiogram.types.inline_query_result.InlineQueryResultDocument:7
#: aiogram.types.inline_query_result.InlineQueryResultVenue:6
#: aiogram.types.inline_query_result.InlineQueryResultVoice:7 of
msgid ""
"Note: This will only work in Telegram versions released after 9 April, "
"2016. Older clients will ignore them."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultAudio:8 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultaudio"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultVoice:1 of
msgid ""
"Represents a link to a voice recording in an .ogg container encoded with "
"OPUS."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultVoice:3 of
msgid ""
"By default, this voice recording will be sent by the user. Alternatively,"
" you can use input_message_content to send a message with the specified "
"content instead of the the voice message."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultVoice:10 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultvoice"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultDocument:1 of
msgid "Represents a link to a file."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultDocument:3 of
msgid ""
"By default, this file will be sent by the user with an optional caption. "
"Alternatively, you can use input_message_content to send a message with "
"the specified content instead of the file. Currently, only .PDF and .ZIP "
"files can be sent using this method."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultDocument:9 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultdocument"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultLocation:1 of
msgid "Represents a location on a map."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultLocation:3 of
msgid ""
"By default, the location will be sent by the user. Alternatively, you can"
" use input_message_content to send a message with the specified content "
"instead of the location."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultLocation:7 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultlocation"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultVenue:1 of
msgid "Represents a venue. By default, the venue will be sent by the user."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultVenue:3 of
msgid ""
"Alternatively, you can use input_message_content to send a message with "
"the specified content instead of the venue."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultVenue:9 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultvenue"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultContact:1 of
msgid "Represents a contact with a phone number."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultContact:3 of
msgid ""
"By default, this contact will be sent by the user. Alternatively, you can"
" use input_message_content to send a message with the specified content "
"instead of the contact."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultContact:9 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultcontact"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultGame:1 of
msgid "Represents a Game."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultGame:3 of
msgid ""
"Note: This will only work in Telegram versions released after October 1, "
"2016. Older clients will not display any inline results if a game result "
"is among them."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultGame:6 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultgame"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedPhoto:1 of
msgid "Represents a link to a photo stored on the Telegram servers."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedPhoto:3 of
msgid ""
"By default, this photo will be sent by the user with an optional caption."
" Alternatively, you can use input_message_content to send a message with "
"the specified content instead of the photo."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedPhoto:7 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultcachedphoto"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedGif:1 of
msgid "Represents a link to an animated GIF file stored on the Telegram servers."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedGif:3 of
msgid ""
"By default, this animated GIF file will be sent by the user with an "
"optional caption. Alternatively, you can use input_message_content to "
"send a message with specified content instead of the animation."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedGif:7 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultcachedgif"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedMpeg4Gif:1 of
msgid ""
"Represents a link to a video animation (H.264/MPEG-4 AVC video without "
"sound) stored on the Telegram servers."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedMpeg4Gif:3 of
msgid ""
"By default, this animated MPEG-4 file will be sent by the user with an "
"optional caption. Alternatively, you can use input_message_content to "
"send a message with the specified content instead of the animation."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedMpeg4Gif:7 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultcachedmpeg4gif"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedSticker:1 of
msgid "Represents a link to a sticker stored on the Telegram servers."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedSticker:3 of
msgid ""
"By default, this sticker will be sent by the user. Alternatively, you can"
" use input_message_content to send a message with the specified content "
"instead of the sticker."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedSticker:10 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultcachedsticker"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedDocument:1 of
msgid ""
"Represents a link to a file stored on the Telegram servers. By default, "
"this file will be sent by the user with an optional caption. "
"Alternatively, you can use input_message_content to send a message with "
"the specified content instead of the file."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedDocument:9 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultcacheddocument"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedVideo:1 of
msgid "Represents a link to a video file stored on the Telegram servers."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedVideo:7 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultcachedvideo"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedVoice:1 of
msgid "Represents a link to a voice message stored on the Telegram servers."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedVoice:3 of
msgid ""
"By default, this voice message will be sent by the user. Alternatively, "
"you can use input_message_content to send a message with the specified "
"content instead of the voice message."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedVoice:9 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultcachedvoice"
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedAudio:1 of
msgid "Represents a link to an mp3 audio file stored on the Telegram servers."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedAudio:3 of
msgid ""
"By default, this audio file will be sent by the user. Alternatively, you "
"can use input_message_content to send a message with the specified "
"content instead of the audio."
msgstr ""

#: aiogram.types.inline_query_result.InlineQueryResultCachedAudio:10 of
msgid "https://core.telegram.org/bots/api#inlinequeryresultcachedaudio"
msgstr ""

