# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version:  aiogram\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 20:35+0500\n"
"PO-Revision-Date: 2022-10-25 18:31+0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../dispatcher/filters/callback_data.rst:3
msgid "Callback Data Factory & Filter"
msgstr "Фабрика міток зворотнього виклику та фільтрування"

#: ../../dispatcher/filters/callback_data.rst:11
msgid "Usage"
msgstr "Використання"

#: ../../dispatcher/filters/callback_data.rst:13
msgid "Create subclass of :code:`CallbackData`:"
msgstr "Створення підкласу :code:`CallbackData`:"

#: ../../dispatcher/filters/callback_data.rst:21
msgid "After that you can generate any callback based on this class, for example:"
msgstr ""
"Після цього ви можете створити будь-який зворотній виклик на основі цього"
" класу, наприклад:"

#: ../../dispatcher/filters/callback_data.rst:29
msgid ""
"So... Now you can use this class to generate any callbacks with defined "
"structure"
msgstr ""
"Отже... Тепер ви можете використовувати цей клас для створення будь-яких "
"зворотних викликів із визначеною структурою"

#: ../../dispatcher/filters/callback_data.rst:41
msgid "... and handle by specific rules"
msgstr "... і обробляти за певними правилами"

#: ../../dispatcher/filters/callback_data.rst:52
msgid "Also can be used in :doc:`Keyboard builder </utils/keyboard>`:"
msgstr ""

#: ../../dispatcher/filters/callback_data.rst:63
msgid "Another abstract example:"
msgstr "Ще один абстрактний приклад:"

#: ../../dispatcher/filters/callback_data.rst:101
msgid "Known limitations"
msgstr "Відомі обмеження"

#: ../../dispatcher/filters/callback_data.rst:103
msgid "Allowed types and their subclasses:"
msgstr "Дозволені типи та їх підкласи:"

#: ../../dispatcher/filters/callback_data.rst:105
msgid ":code:`str`"
msgstr ":code:`str`"

#: ../../dispatcher/filters/callback_data.rst:106
msgid ":code:`int`"
msgstr ":code:`int`"

#: ../../dispatcher/filters/callback_data.rst:107
msgid ":code:`bool`"
msgstr ":code:`bool`"

#: ../../dispatcher/filters/callback_data.rst:108
msgid ":code:`float`"
msgstr ":code:`float`"

#: ../../dispatcher/filters/callback_data.rst:109
msgid ":code:`Decimal`  (:code:`from decimal import Decimal`)"
msgstr ":code:`Decimal`  (:code:`from decimal import Decimal`)"

#: ../../dispatcher/filters/callback_data.rst:110
msgid ":code:`Fraction`  (:code:`from fractions import Fraction`)"
msgstr ":code:`Fraction`  (:code:`from fractions import Fraction`)"

#: ../../dispatcher/filters/callback_data.rst:111
msgid ":code:`UUID` (:code:`from uuid import UUID`)"
msgstr ":code:`UUID` (:code:`from uuid import UUID`)"

#: ../../dispatcher/filters/callback_data.rst:112
msgid ":code:`Enum` (:code:`from enum import Enum`, only for string enums)"
msgstr ":code:`Enum` (:code:`from enum import Enum`, лише для переліків рядків)"

#: ../../dispatcher/filters/callback_data.rst:113
msgid ":code:`IntEnum` (:code:`from enum import IntEnum`, only for int enums)"
msgstr ""
":code:`IntEnum` (:code:`from enum import IntEnum`, тільки для переліків "
"int)"

#: ../../dispatcher/filters/callback_data.rst:118
msgid ""
"Note that the integer Enum's should be always is subclasses of "
":code:`IntEnum` in due to parsing issues."
msgstr ""
"Зауважте, що ціле число Enum завжди має бути підкласом :code:`IntEnum` "
"через проблеми з синтаксичним аналізом."

#~ msgid "Base class for callback data wrapper"
#~ msgstr "Базовий клас для обгортки мітки зворотного виклику"

#~ msgid "This class should be used as super-class of user-defined callbacks."
#~ msgstr ""
#~ "Цей клас слід використовувати як "
#~ "супер-клас зворотних викликів, визначених "
#~ "користувачем."

#~ msgid ""
#~ "The class-keyword :code:`prefix` is "
#~ "required to define prefix and also "
#~ "the argument :code:`sep` can be passed"
#~ " to define separator (default is "
#~ ":code:`:`)."
#~ msgstr ""
#~ "Ключове слово класу :code:`prefix` потрібне"
#~ " для визначення префікса, а також "
#~ "аргумент :code:`sep` можна передати для "
#~ "визначення роздільника (за замовчуванням це"
#~ " :code:`:`)."

#~ msgid "Generate callback data string"
#~ msgstr "Генерування рядок мітки зворотного виклику"

#~ msgid "Returns"
#~ msgstr "Повертає"

#~ msgid "valid callback data for Telegram Bot API"
#~ msgstr "дійсна мітка зворотного виклику для Telegram Bot API"

#~ msgid "Parse callback data string"
#~ msgstr "Аналіз рядка мітки зворотного виклику"

#~ msgid "Parameters"
#~ msgstr "Параметри"

#~ msgid "value from Telegram"
#~ msgstr "значення з Telegram"

#~ msgid "instance of CallbackData"
#~ msgstr "екземпляр мітки зворотного виклику"

#~ msgid "Generates a filter for callback query with rule"
#~ msgstr "Створює фільтр для запиту зворотного виклику з правилом"

#~ msgid "magic rule"
#~ msgstr "магічне правило"

#~ msgid "instance of filter"
#~ msgstr "екземпляр фільтру"

