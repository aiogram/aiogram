# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version:  aiogram\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 20:35+0500\n"
"PO-Revision-Date: 2022-10-20 20:56+0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../dispatcher/middlewares.rst:3
msgid "Middlewares"
msgstr "Проміжні програми"

#: ../../dispatcher/middlewares.rst:5
msgid ""
"**aiogram** provides powerful mechanism for customizing event handlers "
"via middlewares."
msgstr ""
"**aiogram** надає потужний механізм для налаштування обробників(handler) "
"подій через проміжні програми."

#: ../../dispatcher/middlewares.rst:7
msgid ""
"Middlewares in bot framework seems like Middlewares mechanism in web-"
"frameworks like `aiohttp "
"<https://docs.aiohttp.org/en/stable/web_advanced.html#aiohttp-web-"
"middlewares>`_, `fastapi "
"<https://fastapi.tiangolo.com/tutorial/middleware/>`_, `Django "
"<https://docs.djangoproject.com/en/3.0/topics/http/middleware/>`_ or "
"etc.) with small difference - here is implemented two layers of "
"middlewares (before and after filters)."
msgstr ""
"Проміжні програми у фреймворку для ботів виглядають як механізм проміжних"
" програм у веб-фреймворках, таких як `aiohttp "
"<https://docs.aiohttp.org/en/stable/web_advanced.html#aiohttp-web-"
"middlewares>`_, `fastapi "
"<https://fastapi.tiangolo.com/tutorial/middleware/>`_, `Django "
"<https://docs.djangoproject.com/en/3.0/topics/http/middleware/>`_  тощо) "
"з невеликою різницею – тут реалізовано два рівні проміжного програмних "
"програм (до та після фільтрів)."

#: ../../dispatcher/middlewares.rst:15
msgid ""
"Middleware is function that triggered on every event received from "
"Telegram Bot API in many points on processing pipeline."
msgstr ""
"Проміжна програма — це функція, яка запускається під час кожної події, "
"отриманої від Telegram Bot API у багатьох точках процесу обробки."

#: ../../dispatcher/middlewares.rst:19
msgid "Base theory"
msgstr "Основні поняття"

#: ../../dispatcher/middlewares.rst:21
msgid "As many books and other literature in internet says:"
msgstr "Більшість книг та Інтернет-джерел стверджують:"

#: ../../dispatcher/middlewares.rst:23
msgid ""
"Middleware is reusable software that leverages patterns and frameworks to"
" bridge the gap between the functional requirements of applications and "
"the underlying operating systems, network protocol stacks, and databases."
msgstr ""
"Проміжна програма — це програма, багаторазового використання, що "
"використовує шаблони та фреймворки для ліквідування розриву між "
"функціональними вимогами додатків і основними операційними системами, "
"стеками мережевих протоколів і базами даних."

#: ../../dispatcher/middlewares.rst:27
msgid ""
"Middleware can modify, extend or reject processing event in many places "
"of pipeline."
msgstr ""
"Проміжна програма може змінювати, розширювати або відхиляти подію обробки"
" у багатьох точках процесу обробки."

#: ../../dispatcher/middlewares.rst:30
msgid "Basics"
msgstr "Основи"

#: ../../dispatcher/middlewares.rst:32
msgid ""
"Middleware instance can be applied for every type of Telegram Event "
"(Update, Message, etc.) in two places"
msgstr ""
"Екземпляр проміжної програми можна застосувати для кожного типу події "
"Telegram (оновлення, повідомлення тощо) у двох місцях"

#: ../../dispatcher/middlewares.rst:34
msgid ""
"Outer scope - before processing filters "
"(:code:`<router>.<event>.outer_middleware(...)`)"
msgstr ""
"Зовнішня область - перед обробкою фільтрами "
"(:code:`<router>.<event>.outer_middleware(...)`)"

#: ../../dispatcher/middlewares.rst:35
msgid ""
"Inner scope - after processing filters but before handler "
"(:code:`<router>.<event>.middleware(...)`)"
msgstr ""
"Внутрішня область – після обробки фільтрами, але перед обробником "
"(handler) (:code:`<router>.<event>.middleware(...)`)"

#: ../../dispatcher/middlewares.rst:-1
msgid "Middleware basics"
msgstr "Основи проміжних програм"

#: ../../dispatcher/middlewares.rst:42
msgid ""
"Middleware should be subclass of :code:`BaseMiddleware` (:code:`from "
"aiogram import BaseMiddleware`) or any async callable"
msgstr ""
"Проміжна програма має бути підкласом :code:`BaseMiddleware` (:code:`from "
"aiogram import BaseMiddleware`) або будь-якою асинхронною функцією"

#: ../../dispatcher/middlewares.rst:45
msgid "Arguments specification"
msgstr "Специфікація аргументів"

#: ../../dispatcher/middlewares.rst:56
msgid "Examples"
msgstr "Приклади"

#: ../../dispatcher/middlewares.rst:60
msgid ""
"Middleware should always call :code:`await handler(event, data)` to "
"propagate event for next middleware/handler"
msgstr ""
"Проміжні програми мають завжди викликати :code:`await handler(event, "
"data)` , щоб передавати подію для наступної проміжної програми/обробника "
"(handler)"

#: ../../dispatcher/middlewares.rst:64
msgid "Class-based"
msgstr "Класово орієнтований"

#: ../../dispatcher/middlewares.rst:85
msgid "and then"
msgstr "і тоді"

#: ../../dispatcher/middlewares.rst:94
msgid "Function-based"
msgstr "Функціонально-орієнтований"

#: ../../dispatcher/middlewares.rst:109
msgid "Facts"
msgstr "Факти"

#: ../../dispatcher/middlewares.rst:111
msgid "Middlewares from outer scope will be called on every incoming event"
msgstr ""
"Проміжні програми із зовнішньої області викликатимуться під час кожної "
"вхідної події"

#: ../../dispatcher/middlewares.rst:112
msgid "Middlewares from inner scope will be called only when filters pass"
msgstr ""
"Проміжні програми із внутрішньої області викликатимуться лише після "
"проходження фільтрів"

#: ../../dispatcher/middlewares.rst:113
msgid ""
"Inner middlewares is always calls for "
":class:`aiogram.types.update.Update` event type in due to all incoming "
"updates going to specific event type handler through built in update "
"handler"
msgstr ""
"Внутрішні проміжні програми викликають тип події "
":class:`aiogram.types.update.Update` , через те, що всі вхідні оновлення "
"надходять до обробника (handler) певного типу подій через вбудований "
"обробник (handler) оновлень"

#~ msgid "Bases: :py:class:`~abc.ABC`"
#~ msgstr "Основа: :py:class:`~abc.ABC`"

#~ msgid "Generic middleware class"
#~ msgstr "Узагальнений клас проміжних програм"

#~ msgid "Execute middleware"
#~ msgstr "Виконання проміжної програми"

#~ msgid "Parameters"
#~ msgstr "Параметри"

#~ msgid "Wrapped handler in middlewares chain"
#~ msgstr "Обробник (handler), обгорнутий у ланцюжок проміжних програм"

#~ msgid "Incoming event (Subclass of :class:`aiogram.types.base.TelegramObject`)"
#~ msgstr "Вхідна подія (підклас :class:`aiogram.types.base.TelegramObject`)"

#~ msgid "Contextual data. Will be mapped to handler arguments"
#~ msgstr "Контекстні дані. Будуть зіставлені з аргументами обробника"

#~ msgid "Returns"
#~ msgstr "Повертає"

#~ msgid ":class:`Any`"
#~ msgstr ":class:`Any`"

