# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 20:35+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/methods/get_updates.rst:3
msgid "getUpdates"
msgstr ""

#: ../../api/methods/get_updates.rst:5
msgid "Returns: :obj:`List[Update]`"
msgstr ""

#: ../../api/methods/get_updates.rst:14
msgid "Usage"
msgstr ""

#: ../../api/methods/get_updates.rst:17
msgid "As bot method"
msgstr ""

#: ../../api/methods/get_updates.rst:25
msgid "Method as object"
msgstr ""

#: ../../api/methods/get_updates.rst:27
msgid "Imports:"
msgstr ""

#: ../../api/methods/get_updates.rst:29
msgid ":code:`from aiogram.methods.get_updates import GetUpdates`"
msgstr ""

#: ../../api/methods/get_updates.rst:30
msgid "alias: :code:`from aiogram.methods import GetUpdates`"
msgstr ""

#: ../../api/methods/get_updates.rst:33
msgid "With specific bot"
msgstr ""

#~ msgid ""
#~ "Use this method to receive incoming "
#~ "updates using long polling (`wiki "
#~ "<https://en.wikipedia.org/wiki/Push_technology#Long_polling>`_). "
#~ "Returns an Array of "
#~ ":class:`aiogram.types.update.Update` objects."
#~ msgstr ""

#~ msgid "**Notes**"
#~ msgstr ""

#~ msgid "**1.** This method will not work if an outgoing webhook is set up."
#~ msgstr ""

#~ msgid ""
#~ "**2.** In order to avoid getting "
#~ "duplicate updates, recalculate *offset* after"
#~ " each server response."
#~ msgstr ""

#~ msgid "Source: https://core.telegram.org/bots/api#getupdates"
#~ msgstr ""

#~ msgid ""
#~ "Identifier of the first update to "
#~ "be returned. Must be greater by "
#~ "one than the highest among the "
#~ "identifiers of previously received updates."
#~ " By default, updates starting with "
#~ "the earliest unconfirmed update are "
#~ "returned. An update is considered "
#~ "confirmed as soon as "
#~ ":class:`aiogram.methods.get_updates.GetUpdates` is called"
#~ " with an *offset* higher than its "
#~ "*update_id*. The negative offset can be"
#~ " specified to retrieve updates starting "
#~ "from *-offset* update from the end "
#~ "of the updates queue. All previous "
#~ "updates will forgotten."
#~ msgstr ""

#~ msgid ""
#~ "Limits the number of updates to be"
#~ " retrieved. Values between 1-100 are "
#~ "accepted. Defaults to 100."
#~ msgstr ""

#~ msgid ""
#~ "Timeout in seconds for long polling. "
#~ "Defaults to 0, i.e. usual short "
#~ "polling. Should be positive, short "
#~ "polling should be used for testing "
#~ "purposes only."
#~ msgstr ""

#~ msgid ""
#~ "A JSON-serialized list of the "
#~ "update types you want your bot to"
#~ " receive. For example, specify ['message',"
#~ " 'edited_channel_post', 'callback_query'] to only"
#~ " receive updates of these types. See"
#~ " :class:`aiogram.types.update.Update` for a "
#~ "complete list of available update types."
#~ " Specify an empty list to receive "
#~ "all update types except *chat_member* "
#~ "(default). If not specified, the "
#~ "previous setting will be used."
#~ msgstr ""

