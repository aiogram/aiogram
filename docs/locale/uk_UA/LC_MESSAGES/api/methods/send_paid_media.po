# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-08 02:28+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: uk_UA\n"
"Language-Team: uk_UA <LL@li.org>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../api/methods/send_paid_media.rst:3
msgid "sendPaidMedia"
msgstr ""

#: ../../api/methods/send_paid_media.rst:5
msgid "Returns: :obj:`Message`"
msgstr ""

#: aiogram.methods.send_paid_media.SendPaidMedia:1 of
msgid ""
"Use this method to send paid media. On success, the sent "
":class:`aiogram.types.message.Message` is returned."
msgstr ""

#: aiogram.methods.send_paid_media.SendPaidMedia:3 of
msgid "Source: https://core.telegram.org/bots/api#sendpaidmedia"
msgstr ""

#: ../../docstring aiogram.methods.send_paid_media.SendPaidMedia.chat_id:1 of
msgid ""
"Unique identifier for the target chat or username of the target channel "
"(in the format :code:`@channelusername`). If the chat is a channel, all "
"Telegram Star proceeds from this media will be credited to the chat's "
"balance. Otherwise, they will be credited to the bot's balance."
msgstr ""

#: ../../docstring aiogram.methods.send_paid_media.SendPaidMedia.star_count:1
#: of
msgid ""
"The number of Telegram Stars that must be paid to buy access to the "
"media; 1-2500"
msgstr ""

#: ../../docstring aiogram.methods.send_paid_media.SendPaidMedia.media:1 of
msgid "A JSON-serialized array describing the media to be sent; up to 10 items"
msgstr ""

#: ../../docstring
#: aiogram.methods.send_paid_media.SendPaidMedia.business_connection_id:1 of
msgid ""
"Unique identifier of the business connection on behalf of which the "
"message will be sent"
msgstr ""

#: ../../docstring aiogram.methods.send_paid_media.SendPaidMedia.payload:1 of
msgid ""
"Bot-defined paid media payload, 0-128 bytes. This will not be displayed "
"to the user, use it for your internal processes."
msgstr ""

#: ../../docstring aiogram.methods.send_paid_media.SendPaidMedia.caption:1 of
msgid "Media caption, 0-1024 characters after entities parsing"
msgstr ""

#: ../../docstring aiogram.methods.send_paid_media.SendPaidMedia.parse_mode:1
#: of
msgid ""
"Mode for parsing entities in the media caption. See `formatting options "
"<https://core.telegram.org/bots/api#formatting-options>`_ for more "
"details."
msgstr ""

#: ../../docstring
#: aiogram.methods.send_paid_media.SendPaidMedia.caption_entities:1 of
msgid ""
"A JSON-serialized list of special entities that appear in the caption, "
"which can be specified instead of *parse_mode*"
msgstr ""

#: ../../docstring
#: aiogram.methods.send_paid_media.SendPaidMedia.show_caption_above_media:1 of
msgid "Pass :code:`True`, if the caption must be shown above the message media"
msgstr ""

#: ../../docstring
#: aiogram.methods.send_paid_media.SendPaidMedia.disable_notification:1 of
msgid ""
"Sends the message `silently <https://telegram.org/blog/channels-2-0"
"#silent-messages>`_. Users will receive a notification with no sound."
msgstr ""

#: ../../docstring
#: aiogram.methods.send_paid_media.SendPaidMedia.protect_content:1 of
msgid "Protects the contents of the sent message from forwarding and saving"
msgstr ""

#: ../../docstring
#: aiogram.methods.send_paid_media.SendPaidMedia.allow_paid_broadcast:1 of
msgid ""
"Pass :code:`True` to allow up to 1000 messages per second, ignoring "
"`broadcasting limits <https://core.telegram.org/bots/faq#how-can-i"
"-message-all-of-my-bot-39s-subscribers-at-once>`_ for a fee of 0.1 "
"Telegram Stars per message. The relevant Stars will be withdrawn from the"
" bot's balance"
msgstr ""

#: ../../docstring
#: aiogram.methods.send_paid_media.SendPaidMedia.reply_parameters:1 of
msgid "Description of the message to reply to"
msgstr ""

#: ../../docstring aiogram.methods.send_paid_media.SendPaidMedia.reply_markup:1
#: of
msgid ""
"Additional interface options. A JSON-serialized object for an `inline "
"keyboard <https://core.telegram.org/bots/features#inline-keyboards>`_, "
"`custom reply keyboard "
"<https://core.telegram.org/bots/features#keyboards>`_, instructions to "
"remove a reply keyboard or to force a reply from the user"
msgstr ""

#: ../../api/methods/send_paid_media.rst:15
msgid "Usage"
msgstr ""

#: ../../api/methods/send_paid_media.rst:18
msgid "As bot method"
msgstr ""

#: ../../api/methods/send_paid_media.rst:26
msgid "Method as object"
msgstr ""

#: ../../api/methods/send_paid_media.rst:28
msgid "Imports:"
msgstr ""

#: ../../api/methods/send_paid_media.rst:30
msgid ":code:`from aiogram.methods.send_paid_media import SendPaidMedia`"
msgstr ""

#: ../../api/methods/send_paid_media.rst:31
msgid "alias: :code:`from aiogram.methods import SendPaidMedia`"
msgstr ""

#: ../../api/methods/send_paid_media.rst:34
msgid "With specific bot"
msgstr ""

#: ../../api/methods/send_paid_media.rst:41
msgid "As reply into Webhook in handler"
msgstr ""

#: ../../api/methods/send_paid_media.rst:49
msgid "As shortcut from received object"
msgstr ""

#: ../../api/methods/send_paid_media.rst:51
msgid ":meth:`aiogram.types.message.Message.answer_paid_media`"
msgstr ""

#: ../../api/methods/send_paid_media.rst:52
msgid ":meth:`aiogram.types.message.Message.reply_paid_media`"
msgstr ""

#: ../../api/methods/send_paid_media.rst:53
msgid ":meth:`aiogram.types.inaccessible_message.InaccessibleMessage.answer_paid_media`"
msgstr ""

#: ../../api/methods/send_paid_media.rst:54
msgid ":meth:`aiogram.types.inaccessible_message.InaccessibleMessage.reply_paid_media`"
msgstr ""
