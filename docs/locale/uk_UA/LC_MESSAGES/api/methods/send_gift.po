# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-08 02:28+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: uk_UA\n"
"Language-Team: uk_UA <LL@li.org>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../api/methods/send_gift.rst:3
msgid "sendGift"
msgstr ""

#: ../../api/methods/send_gift.rst:5
msgid "Returns: :obj:`bool`"
msgstr ""

#: aiogram.methods.send_gift.SendGift:1 of
msgid ""
"Sends a gift to the given user or channel chat. The gift can't be "
"converted to Telegram Stars by the receiver. Returns :code:`True` on "
"success."
msgstr ""

#: aiogram.methods.send_gift.SendGift:3 of
msgid "Source: https://core.telegram.org/bots/api#sendgift"
msgstr ""

#: ../../docstring aiogram.methods.send_gift.SendGift.gift_id:1 of
msgid "Identifier of the gift"
msgstr ""

#: ../../docstring aiogram.methods.send_gift.SendGift.user_id:1 of
msgid ""
"Required if *chat_id* is not specified. Unique identifier of the target "
"user who will receive the gift."
msgstr ""

#: ../../docstring aiogram.methods.send_gift.SendGift.chat_id:1 of
msgid ""
"Required if *user_id* is not specified. Unique identifier for the chat or"
" username of the channel (in the format :code:`@channelusername`) that "
"will receive the gift."
msgstr ""

#: ../../docstring aiogram.methods.send_gift.SendGift.pay_for_upgrade:1 of
msgid ""
"Pass :code:`True` to pay for the gift upgrade from the bot's balance, "
"thereby making the upgrade free for the receiver"
msgstr ""

#: ../../docstring aiogram.methods.send_gift.SendGift.text:1 of
msgid "Text that will be shown along with the gift; 0-255 characters"
msgstr ""

#: ../../docstring aiogram.methods.send_gift.SendGift.text_parse_mode:1 of
msgid ""
"Mode for parsing entities in the text. See `formatting options "
"<https://core.telegram.org/bots/api#formatting-options>`_ for more "
"details. Entities other than 'bold', 'italic', 'underline', "
"'strikethrough', 'spoiler', and 'custom_emoji' are ignored."
msgstr ""

#: ../../docstring aiogram.methods.send_gift.SendGift.text_entities:1 of
msgid ""
"A JSON-serialized list of special entities that appear in the gift text. "
"It can be specified instead of *text_parse_mode*. Entities other than "
"'bold', 'italic', 'underline', 'strikethrough', 'spoiler', and "
"'custom_emoji' are ignored."
msgstr ""

#: ../../api/methods/send_gift.rst:15
msgid "Usage"
msgstr ""

#: ../../api/methods/send_gift.rst:18
msgid "As bot method"
msgstr ""

#: ../../api/methods/send_gift.rst:26
msgid "Method as object"
msgstr ""

#: ../../api/methods/send_gift.rst:28
msgid "Imports:"
msgstr ""

#: ../../api/methods/send_gift.rst:30
msgid ":code:`from aiogram.methods.send_gift import SendGift`"
msgstr ""

#: ../../api/methods/send_gift.rst:31
msgid "alias: :code:`from aiogram.methods import SendGift`"
msgstr ""

#: ../../api/methods/send_gift.rst:34
msgid "With specific bot"
msgstr ""

#: ../../api/methods/send_gift.rst:41
msgid "As reply into Webhook in handler"
msgstr ""
