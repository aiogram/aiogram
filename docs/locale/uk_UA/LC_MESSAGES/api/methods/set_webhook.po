# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 20:35+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/methods/set_webhook.rst:3
msgid "setWebhook"
msgstr ""

#: ../../api/methods/set_webhook.rst:5
msgid "Returns: :obj:`bool`"
msgstr ""

#: ../../api/methods/set_webhook.rst:14
msgid "Usage"
msgstr ""

#: ../../api/methods/set_webhook.rst:17
msgid "As bot method"
msgstr ""

#: ../../api/methods/set_webhook.rst:25
msgid "Method as object"
msgstr ""

#: ../../api/methods/set_webhook.rst:27
msgid "Imports:"
msgstr ""

#: ../../api/methods/set_webhook.rst:29
msgid ":code:`from aiogram.methods.set_webhook import SetWebhook`"
msgstr ""

#: ../../api/methods/set_webhook.rst:30
msgid "alias: :code:`from aiogram.methods import SetWebhook`"
msgstr ""

#: ../../api/methods/set_webhook.rst:33
msgid "With specific bot"
msgstr ""

#: ../../api/methods/set_webhook.rst:40
msgid "As reply into Webhook in handler"
msgstr ""

#~ msgid ""
#~ "Use this method to specify a URL"
#~ " and receive incoming updates via an"
#~ " outgoing webhook. Whenever there is "
#~ "an update for the bot, we will "
#~ "send an HTTPS POST request to the"
#~ " specified URL, containing a JSON-"
#~ "serialized :class:`aiogram.types.update.Update`. In "
#~ "case of an unsuccessful request, we "
#~ "will give up after a reasonable "
#~ "amount of attempts. Returns :code:`True` "
#~ "on success. If you'd like to make"
#~ " sure that the webhook was set "
#~ "by you, you can specify secret "
#~ "data in the parameter *secret_token*. If"
#~ " specified, the request will contain "
#~ "a header 'X-Telegram-Bot-Api-Secret-"
#~ "Token' with the secret token as "
#~ "content."
#~ msgstr ""

#~ msgid "**Notes**"
#~ msgstr ""

#~ msgid ""
#~ "**1.** You will not be able to "
#~ "receive updates using "
#~ ":class:`aiogram.methods.get_updates.GetUpdates` for as "
#~ "long as an outgoing webhook is set"
#~ " up."
#~ msgstr ""

#~ msgid ""
#~ "**2.** To use a self-signed "
#~ "certificate, you need to upload your "
#~ "`public key certificate "
#~ "<https://core.telegram.org/bots/self-signed>`_ using "
#~ "*certificate* parameter. Please upload as "
#~ "InputFile, sending a String will not "
#~ "work."
#~ msgstr ""

#~ msgid ""
#~ "**3.** Ports currently supported *for "
#~ "webhooks*: **443, 80, 88, 8443**. If "
#~ "you're having any trouble setting up "
#~ "webhooks, please check out this `amazing"
#~ " guide to webhooks "
#~ "<https://core.telegram.org/bots/webhooks>`_."
#~ msgstr ""

#~ msgid "Source: https://core.telegram.org/bots/api#setwebhook"
#~ msgstr ""

#~ msgid ""
#~ "HTTPS URL to send updates to. Use"
#~ " an empty string to remove webhook"
#~ " integration"
#~ msgstr ""

#~ msgid ""
#~ "Upload your public key certificate so"
#~ " that the root certificate in use "
#~ "can be checked. See our `self-"
#~ "signed guide <https://core.telegram.org/bots/self-"
#~ "signed>`_ for details."
#~ msgstr ""

#~ msgid ""
#~ "The fixed IP address which will be"
#~ " used to send webhook requests "
#~ "instead of the IP address resolved "
#~ "through DNS"
#~ msgstr ""

#~ msgid ""
#~ "The maximum allowed number of "
#~ "simultaneous HTTPS connections to the "
#~ "webhook for update delivery, 1-100. "
#~ "Defaults to *40*. Use lower values "
#~ "to limit the load on your bot's"
#~ " server, and higher values to "
#~ "increase your bot's throughput."
#~ msgstr ""

#~ msgid ""
#~ "A JSON-serialized list of the "
#~ "update types you want your bot to"
#~ " receive. For example, specify ['message',"
#~ " 'edited_channel_post', 'callback_query'] to only"
#~ " receive updates of these types. See"
#~ " :class:`aiogram.types.update.Update` for a "
#~ "complete list of available update types."
#~ " Specify an empty list to receive "
#~ "all update types except *chat_member* "
#~ "(default). If not specified, the "
#~ "previous setting will be used."
#~ msgstr ""

#~ msgid "Pass :code:`True` to drop all pending updates"
#~ msgstr ""

#~ msgid ""
#~ "A secret token to be sent in "
#~ "a header 'X-Telegram-Bot-Api-Secret-"
#~ "Token' in every webhook request, 1-256"
#~ " characters. Only characters :code:`A-Z`, "
#~ ":code:`a-z`, :code:`0-9`, :code:`_` and "
#~ ":code:`-` are allowed. The header is "
#~ "useful to ensure that the request "
#~ "comes from a webhook set by you."
#~ msgstr ""

