# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-30 18:31+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../api/methods/send_sticker.rst:3
msgid "sendSticker"
msgstr ""

#: ../../api/methods/send_sticker.rst:5
msgid "Returns: :obj:`Message`"
msgstr ""

#: aiogram.methods.send_sticker.SendSticker:1 of
msgid ""
"Use this method to send static .WEBP, `animated "
"<https://telegram.org/blog/animated-stickers>`_ .TGS, or `video "
"<https://telegram.org/blog/video-stickers-better-reactions>`_ .WEBM "
"stickers. On success, the sent :class:`aiogram.types.message.Message` is "
"returned."
msgstr ""

#: aiogram.methods.send_sticker.SendSticker:3 of
msgid "Source: https://core.telegram.org/bots/api#sendsticker"
msgstr ""

#: ../../docstring aiogram.methods.send_sticker.SendSticker.chat_id:1 of
msgid ""
"Unique identifier for the target chat or username of the target channel "
"(in the format :code:`@channelusername`)"
msgstr ""

#: ../../docstring aiogram.methods.send_sticker.SendSticker.sticker:1 of
msgid ""
"Sticker to send. Pass a file_id as String to send a file that exists on "
"the Telegram servers (recommended), pass an HTTP URL as a String for "
"Telegram to get a .WEBP sticker from the Internet, or upload a new .WEBP "
"or .TGS sticker using multipart/form-data. :ref:`More information on "
"Sending Files » <sending-files>`. Video stickers can only be sent by a "
"file_id. Animated stickers can't be sent via an HTTP URL."
msgstr ""

#: ../../docstring aiogram.methods.send_sticker.SendSticker.message_thread_id:1
#: of
msgid ""
"Unique identifier for the target message thread (topic) of the forum; for"
" forum supergroups only"
msgstr ""

#: ../../docstring aiogram.methods.send_sticker.SendSticker.emoji:1 of
msgid "Emoji associated with the sticker; only for just uploaded stickers"
msgstr ""

#: ../../docstring
#: aiogram.methods.send_sticker.SendSticker.disable_notification:1 of
msgid ""
"Sends the message `silently <https://telegram.org/blog/channels-2-0"
"#silent-messages>`_. Users will receive a notification with no sound."
msgstr ""

#: ../../docstring aiogram.methods.send_sticker.SendSticker.protect_content:1
#: of
msgid "Protects the contents of the sent message from forwarding and saving"
msgstr ""

#: ../../docstring
#: aiogram.methods.send_sticker.SendSticker.reply_to_message_id:1 of
msgid "If the message is a reply, ID of the original message"
msgstr ""

#: ../../docstring
#: aiogram.methods.send_sticker.SendSticker.allow_sending_without_reply:1 of
msgid ""
"Pass :code:`True` if the message should be sent even if the specified "
"replied-to message is not found"
msgstr ""

#: ../../docstring aiogram.methods.send_sticker.SendSticker.reply_markup:1 of
msgid ""
"Additional interface options. A JSON-serialized object for an `inline "
"keyboard <https://core.telegram.org/bots/features#inline-keyboards>`_, "
"`custom reply keyboard "
"<https://core.telegram.org/bots/features#keyboards>`_, instructions to "
"remove reply keyboard or to force a reply from the user."
msgstr ""

#: ../../api/methods/send_sticker.rst:15
msgid "Usage"
msgstr ""

#: ../../api/methods/send_sticker.rst:18
msgid "As bot method"
msgstr ""

#: ../../api/methods/send_sticker.rst:26
msgid "Method as object"
msgstr ""

#: ../../api/methods/send_sticker.rst:28
msgid "Imports:"
msgstr ""

#: ../../api/methods/send_sticker.rst:30
msgid ":code:`from aiogram.methods.send_sticker import SendSticker`"
msgstr ""

#: ../../api/methods/send_sticker.rst:31
msgid "alias: :code:`from aiogram.methods import SendSticker`"
msgstr ""

#: ../../api/methods/send_sticker.rst:34
msgid "With specific bot"
msgstr ""

#: ../../api/methods/send_sticker.rst:41
msgid "As reply into Webhook in handler"
msgstr ""

#: ../../api/methods/send_sticker.rst:49
msgid "As shortcut from received object"
msgstr ""

#: ../../api/methods/send_sticker.rst:51
msgid ":meth:`aiogram.types.message.Message.answer_sticker`"
msgstr ""

#: ../../api/methods/send_sticker.rst:52
msgid ":meth:`aiogram.types.message.Message.reply_sticker`"
msgstr ""

#: ../../api/methods/send_sticker.rst:53
msgid ":meth:`aiogram.types.chat_member_updated.ChatMemberUpdated.answer_sticker`"
msgstr ""

#: ../../api/methods/send_sticker.rst:54
msgid ":meth:`aiogram.types.chat_join_request.ChatJoinRequest.answer_sticker`"
msgstr ""

#: ../../api/methods/send_sticker.rst:55
msgid ":meth:`aiogram.types.chat_join_request.ChatJoinRequest.answer_sticker_pm`"
msgstr ""

#~ msgid ""
#~ "Additional interface options. A JSON-"
#~ "serialized object for an `inline "
#~ "keyboard <https://core.telegram.org/bots#inline-"
#~ "keyboards-and-on-the-fly-updating>`_, "
#~ "`custom reply keyboard "
#~ "<https://core.telegram.org/bots#keyboards>`_, instructions "
#~ "to remove reply keyboard or to "
#~ "force a reply from the user."
#~ msgstr ""

#~ msgid ""
#~ "Sticker to send. Pass a file_id as"
#~ " String to send a file that "
#~ "exists on the Telegram servers "
#~ "(recommended), pass an HTTP URL as "
#~ "a String for Telegram to get a "
#~ ".WEBP file from the Internet, or "
#~ "upload a new one using multipart"
#~ "/form-data. :ref:`More information on "
#~ "Sending Files » <sending-files>`"
#~ msgstr ""
