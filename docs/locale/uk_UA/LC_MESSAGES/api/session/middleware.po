# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-30 18:31+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../api/session/middleware.rst:3
msgid "Client session middlewares"
msgstr ""

#: ../../api/session/middleware.rst:5
msgid ""
"In some cases you may want to add some middlewares to the client session "
"to customize the behavior of the client."
msgstr ""

#: ../../api/session/middleware.rst:7
msgid "Some useful cases that is:"
msgstr ""

#: ../../api/session/middleware.rst:9
msgid "Log the outgoing requests"
msgstr ""

#: ../../api/session/middleware.rst:10
msgid "Customize the request parameters"
msgstr ""

#: ../../api/session/middleware.rst:11
msgid "Handle rate limiting errors and retry the request"
msgstr ""

#: ../../api/session/middleware.rst:12
msgid "others ..."
msgstr ""

#: ../../api/session/middleware.rst:14
msgid ""
"So, you can do it using client session middlewares. A client session "
"middleware is a function (or callable class) that receives the request "
"and the next middleware to call. The middleware can modify the request "
"and then call the next middleware to continue the request processing."
msgstr ""

#: ../../api/session/middleware.rst:19
msgid "How to register client session middleware?"
msgstr ""

#: ../../api/session/middleware.rst:22
msgid "Register using register method"
msgstr ""

#: ../../api/session/middleware.rst:29
msgid "Register using decorator"
msgstr ""

#: ../../api/session/middleware.rst:44
msgid "Example"
msgstr ""

#: ../../api/session/middleware.rst:47
msgid "Class based session middleware"
msgstr ""

#: ../../api/session/middleware.rst:56
msgid ""
"this middlewware is already implemented inside aiogram, so, if you want "
"to use it you can just import it :code:`from "
"aiogram.client.session.middlewares.request_logging import RequestLogging`"
msgstr ""

#: ../../api/session/middleware.rst:61
msgid "Function based session middleware"
msgstr ""
