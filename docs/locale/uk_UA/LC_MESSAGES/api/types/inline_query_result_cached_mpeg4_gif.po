# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-01 22:51+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../api/types/inline_query_result_cached_mpeg4_gif.rst:3
msgid "InlineQueryResultCachedMpeg4Gif"
msgstr ""

#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif:1
#: of
msgid ""
"Represents a link to a video animation (H.264/MPEG-4 AVC video without "
"sound) stored on the Telegram servers. By default, this animated MPEG-4 "
"file will be sent by the user with an optional caption. Alternatively, "
"you can use *input_message_content* to send a message with the specified "
"content instead of the animation."
msgstr ""

#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif:3
#: of
msgid "Source: https://core.telegram.org/bots/api#inlinequeryresultcachedmpeg4gif"
msgstr ""

#: ../../docstring
#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif.type:1
#: of
msgid "Type of the result, must be *mpeg4_gif*"
msgstr ""

#: ../../docstring
#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif.id:1
#: of
msgid "Unique identifier for this result, 1-64 bytes"
msgstr ""

#: ../../docstring
#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif.mpeg4_file_id:1
#: of
msgid "A valid file identifier for the MPEG4 file"
msgstr ""

#: ../../docstring
#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif.title:1
#: of
msgid "*Optional*. Title for the result"
msgstr ""

#: ../../docstring
#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif.caption:1
#: of
msgid ""
"*Optional*. Caption of the MPEG-4 file to be sent, 0-1024 characters "
"after entities parsing"
msgstr ""

#: ../../docstring
#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif.parse_mode:1
#: of
msgid ""
"*Optional*. Mode for parsing entities in the caption. See `formatting "
"options <https://core.telegram.org/bots/api#formatting-options>`_ for "
"more details."
msgstr ""

#: ../../docstring
#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif.caption_entities:1
#: of
msgid ""
"*Optional*. List of special entities that appear in the caption, which "
"can be specified instead of *parse_mode*"
msgstr ""

#: ../../docstring
#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif.reply_markup:1
#: of
msgid ""
"*Optional*. `Inline keyboard <https://core.telegram.org/bots#inline-"
"keyboards-and-on-the-fly-updating>`_ attached to the message"
msgstr ""

#: ../../docstring
#: aiogram.types.inline_query_result_cached_mpeg4_gif.InlineQueryResultCachedMpeg4Gif.input_message_content:1
#: of
msgid ""
"*Optional*. Content of the message to be sent instead of the video "
"animation"
msgstr ""
