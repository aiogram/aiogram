# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-08 02:28+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: uk_UA\n"
"Language-Team: uk_UA <LL@li.org>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../api/types/input_paid_media_video.rst:3
msgid "InputPaidMediaVideo"
msgstr ""

#: aiogram.types.input_paid_media_video.InputPaidMediaVideo:1 of
msgid "The paid media to send is a video."
msgstr ""

#: aiogram.types.input_paid_media_video.InputPaidMediaVideo:3 of
msgid "Source: https://core.telegram.org/bots/api#inputpaidmediavideo"
msgstr ""

#: ../../docstring
#: aiogram.types.input_paid_media_video.InputPaidMediaVideo.type:1 of
msgid "Type of the media, must be *video*"
msgstr ""

#: ../../docstring
#: aiogram.types.input_paid_media_video.InputPaidMediaVideo.media:1 of
msgid ""
"File to send. Pass a file_id to send a file that exists on the Telegram "
"servers (recommended), pass an HTTP URL for Telegram to get a file from "
"the Internet, or pass 'attach://<file_attach_name>' to upload a new one "
"using multipart/form-data under <file_attach_name> name. :ref:`More "
"information on Sending Files » <sending-files>`"
msgstr ""

#: ../../docstring
#: aiogram.types.input_paid_media_video.InputPaidMediaVideo.thumbnail:1 of
msgid ""
"*Optional*. Thumbnail of the file sent; can be ignored if thumbnail "
"generation for the file is supported server-side. The thumbnail should be"
" in JPEG format and less than 200 kB in size. A thumbnail's width and "
"height should not exceed 320. Ignored if the file is not uploaded using "
"multipart/form-data. Thumbnails can't be reused and can be only uploaded "
"as a new file, so you can pass 'attach://<file_attach_name>' if the "
"thumbnail was uploaded using multipart/form-data under "
"<file_attach_name>. :ref:`More information on Sending Files » <sending-"
"files>`"
msgstr ""

#: ../../docstring
#: aiogram.types.input_paid_media_video.InputPaidMediaVideo.cover:1 of
msgid ""
"*Optional*. Cover for the video in the message. Pass a file_id to send a "
"file that exists on the Telegram servers (recommended), pass an HTTP URL "
"for Telegram to get a file from the Internet, or pass "
"'attach://<file_attach_name>' to upload a new one using multipart/form-"
"data under <file_attach_name> name. :ref:`More information on Sending "
"Files » <sending-files>`"
msgstr ""

#: ../../docstring
#: aiogram.types.input_paid_media_video.InputPaidMediaVideo.start_timestamp:1
#: of
msgid "*Optional*. Start timestamp for the video in the message"
msgstr ""

#: ../../docstring
#: aiogram.types.input_paid_media_video.InputPaidMediaVideo.width:1 of
msgid "*Optional*. Video width"
msgstr ""

#: ../../docstring
#: aiogram.types.input_paid_media_video.InputPaidMediaVideo.height:1 of
msgid "*Optional*. Video height"
msgstr ""

#: ../../docstring
#: aiogram.types.input_paid_media_video.InputPaidMediaVideo.duration:1 of
msgid "*Optional*. Video duration in seconds"
msgstr ""

#: ../../docstring
#: aiogram.types.input_paid_media_video.InputPaidMediaVideo.supports_streaming:1
#: of
msgid ""
"*Optional*. Pass :code:`True` if the uploaded video is suitable for "
"streaming"
msgstr ""
