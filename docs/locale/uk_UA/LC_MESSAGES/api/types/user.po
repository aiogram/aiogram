# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 20:35+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/types/user.rst:3
msgid "User"
msgstr ""

#: aiogram.types.user.User:1 of
msgid "This object represents a Telegram user or bot."
msgstr ""

#: aiogram.types.user.User:3 of
msgid "https://core.telegram.org/bots/api#user"
msgstr ""

#: ../../docstring aiogram.types.user.User.added_to_attachment_menu:1
#: aiogram.types.user.User.can_join_groups:1
#: aiogram.types.user.User.can_read_all_group_messages:1
#: aiogram.types.user.User.first_name:1 aiogram.types.user.User.id:1
#: aiogram.types.user.User.is_bot:1 aiogram.types.user.User.is_premium:1
#: aiogram.types.user.User.language_code:1 aiogram.types.user.User.last_name:1
#: aiogram.types.user.User.supports_inline_queries:1
#: aiogram.types.user.User.username:1 of
msgid "Simple field"
msgstr ""

#: aiogram.types.user.User.full_name:1 of
msgid "You can get full name of user."
msgstr ""

#: aiogram.types.user.User.full_name aiogram.types.user.User.locale
#: aiogram.types.user.User.mention of
msgid "Returns"
msgstr ""

#: aiogram.types.user.User.full_name:3 aiogram.types.user.User.mention:4 of
msgid "str"
msgstr ""

#: aiogram.types.user.User.mention:1 of
msgid ""
"You can get user's username to mention him Full name will be returned if "
"user has no username"
msgstr ""

#: aiogram.types.user.User.locale:1 of
msgid "Get user's locale"
msgstr ""

#: aiogram.types.user.User.locale:3 of
msgid ":class:`babel.core.Locale`"
msgstr ""

#~ msgid "This object represents a Telegram user or bot."
#~ msgstr ""

#~ msgid "Source: https://core.telegram.org/bots/api#user"
#~ msgstr ""

#~ msgid ""
#~ "This object represents a Telegram user"
#~ " or bot. Source: "
#~ "https://core.telegram.org/bots/api#user"
#~ msgstr ""

#~ msgid ""
#~ "*Optional*. :code:`True`, if `privacy mode "
#~ "<https://core.telegram.org/bots#privacy-mode>`_ is "
#~ "disabled for the bot. Returned only "
#~ "in :class:`aiogram.methods.get_me.GetMe`."
#~ msgstr ""

#~ msgid ""
#~ "Unique identifier for this user or "
#~ "bot. This number may have more "
#~ "than 32 significant bits and some "
#~ "programming languages may have "
#~ "difficulty/silent defects in interpreting it."
#~ " But it has at most 52 "
#~ "significant bits, so a 64-bit integer"
#~ " or double-precision float type are"
#~ " safe for storing this identifier."
#~ msgstr ""

#~ msgid ":code:`True`, if this user is a bot"
#~ msgstr ""

#~ msgid "User's or bot's first name"
#~ msgstr ""

#~ msgid "*Optional*. User's or bot's last name"
#~ msgstr ""

#~ msgid "*Optional*. User's or bot's username"
#~ msgstr ""

#~ msgid ""
#~ "*Optional*. `IETF language tag "
#~ "<https://en.wikipedia.org/wiki/IETF_language_tag>`_ of the"
#~ " user's language"
#~ msgstr ""

#~ msgid "*Optional*. :code:`True`, if this user is a Telegram Premium user"
#~ msgstr ""

#~ msgid ""
#~ "*Optional*. :code:`True`, if this user "
#~ "added the bot to the attachment "
#~ "menu"
#~ msgstr ""

#~ msgid ""
#~ "*Optional*. :code:`True`, if the bot can"
#~ " be invited to groups. Returned only"
#~ " in :class:`aiogram.methods.get_me.GetMe`."
#~ msgstr ""

#~ msgid ""
#~ "*Optional*. :code:`True`, if `privacy mode "
#~ "<https://core.telegram.org/bots/features#privacy-mode>`_ "
#~ "is disabled for the bot. Returned "
#~ "only in :class:`aiogram.methods.get_me.GetMe`."
#~ msgstr ""

#~ msgid ""
#~ "*Optional*. :code:`True`, if the bot "
#~ "supports inline queries. Returned only "
#~ "in :class:`aiogram.methods.get_me.GetMe`."
#~ msgstr ""

#~ msgid ""
#~ "Shortcut for method "
#~ ":class:`aiogram.methods.get_user_profile_photos.GetUserProfilePhotos`"
#~ " will automatically fill method attributes:"
#~ msgstr ""

#~ msgid ":code:`user_id`"
#~ msgstr ""

#~ msgid ""
#~ "Use this method to get a list "
#~ "of profile pictures for a user. "
#~ "Returns a "
#~ ":class:`aiogram.types.user_profile_photos.UserProfilePhotos` "
#~ "object."
#~ msgstr ""

#~ msgid "Source: https://core.telegram.org/bots/api#getuserprofilephotos"
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid ""
#~ "Sequential number of the first photo "
#~ "to be returned. By default, all "
#~ "photos are returned."
#~ msgstr ""

#~ msgid ""
#~ "Limits the number of photos to be"
#~ " retrieved. Values between 1-100 are "
#~ "accepted. Defaults to 100."
#~ msgstr ""

#~ msgid ""
#~ "instance of method "
#~ ":class:`aiogram.methods.get_user_profile_photos.GetUserProfilePhotos`"
#~ msgstr ""

