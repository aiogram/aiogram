# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 20:35+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/bot.rst:3
msgid "Bot"
msgstr ""

#: ../../api/bot.rst:5
msgid ""
"Bot instance can be created from :code:`aiogram.Bot` (:code:`from aiogram"
" import Bot`) and you can't use methods without instance of bot with "
"configured token."
msgstr ""

#: ../../api/bot.rst:8
msgid ""
"This class has aliases for all methods and named in "
":code:`lower_camel_case`."
msgstr ""

#: ../../api/bot.rst:10
msgid ""
"For example :code:`sendMessage` named :code:`send_message` and has the "
"same specification with all class-based methods."
msgstr ""

#: ../../api/bot.rst:14
msgid ""
"A full list of methods can be found in the appropriate section of the "
"documentation"
msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~aiogram.utils.mixins.ContextInstanceMixin`\\"
#~ " [:py:class:`Bot`]"
#~ msgstr ""

#~ msgid "Bot class"
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "Telegram Bot token `Obtained from @BotFather <https://t.me/BotFather>`_"
#~ msgstr ""

#~ msgid ""
#~ "HTTP Client session (For example "
#~ "AiohttpSession). If not specified it "
#~ "will be automatically created."
#~ msgstr ""

#~ msgid ""
#~ "Default parse mode. If specified it "
#~ "will be propagated into the API "
#~ "methods at runtime."
#~ msgstr ""

#~ msgid "Raises"
#~ msgstr ""

#~ msgid "When token has invalid format this exception will be raised"
#~ msgstr ""

#~ msgid "Get bot ID from token"
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "Generate bot context"
#~ msgstr ""

#~ msgid "Cached alias for getMe method"
#~ msgstr ""

#~ msgid "Download file by file_path to destination."
#~ msgstr ""

#~ msgid ""
#~ "If you want to automatically create "
#~ "destination (:class:`io.BytesIO`) use default "
#~ "value of destination and handle result"
#~ " of this method."
#~ msgstr ""

#~ msgid ""
#~ "File path on Telegram server (You "
#~ "can get it from :obj:`aiogram.types.File`)"
#~ msgstr ""

#~ msgid ""
#~ "Filename, file path or instance of "
#~ ":class:`io.IOBase`. For e.g. :class:`io.BytesIO`,"
#~ " defaults to None"
#~ msgstr ""

#~ msgid "Total timeout in seconds, defaults to 30"
#~ msgstr ""

#~ msgid "File chunks size, defaults to 64 kb"
#~ msgstr ""

#~ msgid ""
#~ "Go to start of file when "
#~ "downloading is finished. Used only for"
#~ " destination with :class:`typing.BinaryIO` type,"
#~ " defaults to True"
#~ msgstr ""

#~ msgid "Download file by file_id or Downloadable object to destination."
#~ msgstr ""

#~ msgid "file_id or Downloadable object"
#~ msgstr ""

