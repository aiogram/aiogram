# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, aiogram Team
# This file is distributed under the same license as the aiogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-08 02:28+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: uk_UA\n"
"Language-Team: uk_UA <LL@li.org>\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../utils/serialization.rst:5
msgid "Telegram object serialization"
msgstr "Серіалізація об'єкта Telegram"

#: ../../utils/serialization.rst:8
msgid "Serialization"
msgstr "Серіалізація"

#: ../../utils/serialization.rst:10
msgid ""
"To serialize Python object to Telegram object you can use pydantic "
"serialization methods, for example:"
msgstr ""
"Щоб перетворити об'єкт Python у об'єкт Telegram, ви можете використати "
"методи серіалізації pydantic, наприклад:"

#: ../../utils/serialization.rst:17
msgid ""
"If you want to bind serialized object to the Bot instance, you can use "
"context:"
msgstr ""
"Якщо ви хочете прив'язати серіалізований об'єкт до екземпляра бота, ви можете "
"використати контекст:"

#: ../../utils/serialization.rst:26
msgid "Deserialization"
msgstr "Десеріалізація"

#: ../../utils/serialization.rst:28
msgid ""
"In cases when you need to deserialize Telegram object to Python object, "
"you can use this module."
msgstr ""
"У випадках, коли вам потрібно перетворити об'єкт Telegram у об'єкт Python, "
"ви можете використати цей модуль."

#: ../../utils/serialization.rst:30
msgid ""
"To convert Telegram object to Python object excluding files you can use "
":func:`aiogram.utils.serialization.deserialize_telegram_object_to_python`"
" function."
msgstr ""
"Для перетворення об'єкта Telegram у об'єкт Python без врахування файлів ви "
"можете використати функцію "
":func:`aiogram.utils.serialization.deserialize_telegram_object_to_python`."

#: aiogram.utils.serialization.deserialize_telegram_object_to_python:1 of
msgid ""
"Deserialize telegram object to JSON compatible Python object excluding "
"files."
msgstr ""
"Десеріалізуйте об'єкт Telegram у об'єкт Python, сумісний із JSON, без "
"врахування файлів."

#: ../../utils/serialization.rst
msgid "Parameters"
msgstr "Параметри"

#: aiogram.utils.serialization.deserialize_telegram_object_to_python:3 of
msgid "The telegram object to be deserialized."
msgstr "Об'єкт Telegram для десеріалізації."

#: aiogram.utils.serialization.deserialize_telegram_object:4
#: aiogram.utils.serialization.deserialize_telegram_object_to_python:4 of
msgid ""
"Default bot properties should be passed only if you want to use custom "
"defaults."
msgstr ""
"Властивості бота за замовчуванням потрібно передавати лише якщо ви хочете "
"використати власні значення за замовчуванням."

#: aiogram.utils.serialization.deserialize_telegram_object:6
#: aiogram.utils.serialization.deserialize_telegram_object_to_python:6 of
msgid "Whether to include the API method name in the result."
msgstr "Чи включати назву методу API в результат."

#: ../../utils/serialization.rst
msgid "Returns"
msgstr "Повертає"

#: aiogram.utils.serialization.deserialize_telegram_object_to_python:7 of
msgid "The deserialized telegram object."
msgstr "Десеріалізований об'єкт Telegram."

#: ../../utils/serialization.rst:35
msgid ""
"To convert Telegram object to Python object including files you can use "
":func:`aiogram.utils.serialization.deserialize_telegram_object` function,"
" which returns "
":class:`aiogram.utils.serialization.DeserializedTelegramObject` object."
msgstr ""
"Для перетворення об'єкта Telegram у об'єкт Python, враховуючи файли, ви "
"можете використати функцію "
":func:`aiogram.utils.serialization.deserialize_telegram_object`, яка "
"повертає об'єкт "
":class:`aiogram.utils.serialization.DeserializedTelegramObject`."

#: aiogram.utils.serialization.deserialize_telegram_object:1 of
msgid "Deserialize Telegram Object to JSON compatible Python object."
msgstr "Десеріалізуйте об'єкт Telegram у об'єкт Python, сумісний із JSON."

#: aiogram.utils.serialization.deserialize_telegram_object:3 of
msgid "The object to be deserialized."
msgstr "Об'єкт для десеріалізації."

#: aiogram.utils.serialization.deserialize_telegram_object:7 of
msgid "The deserialized Telegram object."
msgstr "Десеріалізований об'єкт Telegram."

#: aiogram.utils.serialization.DeserializedTelegramObject:1 of
msgid "Represents a dumped Telegram object."
msgstr "Представляє вивантажений об'єкт Telegram."

#: aiogram.utils.serialization.DeserializedTelegramObject:3 of
msgid "The dumped data of the Telegram object."
msgstr "Вивантажені дані об'єкта Telegram."

#: aiogram.utils.serialization.DeserializedTelegramObject:5 of
msgid ""
"The dictionary containing the file names as keys and the corresponding "
"`InputFile` objects as values."
msgstr ""
"Словник, що містить імена файлів як ключі та відповідні об'єкти `InputFile` "
"як значення."
