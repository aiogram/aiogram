{
  "meta": {},
  "group": {
    "title": "Available methods",
    "anchor": "available-methods"
  },
  "object": {
    "anchor": "sendpaidmedia",
    "name": "sendPaidMedia",
    "description": "Use this method to send paid media. On success, the sent Message is returned.",
    "html_description": "<p>Use this method to send paid media. On success, the sent <a href=\"#message\">Message</a> is returned.</p>",
    "rst_description": "Use this method to send paid media. On success, the sent :class:`aiogram.types.message.Message` is returned.",
    "annotations": [
      {
        "type": "String",
        "required": false,
        "description": "Unique identifier of the business connection on behalf of which the message will be sent",
        "html_description": "<td>Unique identifier of the business connection on behalf of which the message will be sent</td>",
        "rst_description": "Unique identifier of the business connection on behalf of which the message will be sent\n",
        "name": "business_connection_id"
      },
      {
        "type": "Integer or String",
        "required": true,
        "description": "Unique identifier for the target chat or username of the target channel (in the format @channelusername). If the chat is a channel, all Telegram Star proceeds from this media will be credited to the chat's balance. Otherwise, they will be credited to the bot's balance.",
        "html_description": "<td>Unique identifier for the target chat or username of the target channel (in the format <code>@channelusername</code>). If the chat is a channel, all Telegram Star proceeds from this media will be credited to the chat's balance. Otherwise, they will be credited to the bot's balance.</td>",
        "rst_description": "Unique identifier for the target chat or username of the target channel (in the format :code:`@channelusername`). If the chat is a channel, all Telegram Star proceeds from this media will be credited to the chat's balance. Otherwise, they will be credited to the bot's balance.\n",
        "name": "chat_id"
      },
      {
        "type": "Integer",
        "required": true,
        "description": "The number of Telegram Stars that must be paid to buy access to the media",
        "html_description": "<td>The number of Telegram Stars that must be paid to buy access to the media</td>",
        "rst_description": "The number of Telegram Stars that must be paid to buy access to the media\n",
        "name": "star_count"
      },
      {
        "type": "Array of InputPaidMedia",
        "required": true,
        "description": "A JSON-serialized array describing the media to be sent; up to 10 items",
        "html_description": "<td>A JSON-serialized array describing the media to be sent; up to 10 items</td>",
        "rst_description": "A JSON-serialized array describing the media to be sent; up to 10 items\n",
        "name": "media"
      },
      {
        "type": "String",
        "required": false,
        "description": "Media caption, 0-1024 characters after entities parsing",
        "html_description": "<td>Media caption, 0-1024 characters after entities parsing</td>",
        "rst_description": "Media caption, 0-1024 characters after entities parsing\n",
        "name": "caption"
      },
      {
        "type": "String",
        "required": false,
        "description": "Mode for parsing entities in the media caption. See formatting options for more details.",
        "html_description": "<td>Mode for parsing entities in the media caption. See <a href=\"#formatting-options\">formatting options</a> for more details.</td>",
        "rst_description": "Mode for parsing entities in the media caption. See `formatting options <https://core.telegram.org/bots/api#formatting-options>`_ for more details.\n",
        "name": "parse_mode"
      },
      {
        "type": "Array of MessageEntity",
        "required": false,
        "description": "A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode",
        "html_description": "<td>A JSON-serialized list of special entities that appear in the caption, which can be specified instead of <em>parse_mode</em></td>",
        "rst_description": "A JSON-serialized list of special entities that appear in the caption, which can be specified instead of *parse_mode*\n",
        "name": "caption_entities"
      },
      {
        "type": "Boolean",
        "required": false,
        "description": "Pass True, if the caption must be shown above the message media",
        "html_description": "<td>Pass <em>True</em>, if the caption must be shown above the message media</td>",
        "rst_description": "Pass :code:`True`, if the caption must be shown above the message media\n",
        "name": "show_caption_above_media"
      },
      {
        "type": "Boolean",
        "required": false,
        "description": "Sends the message silently. Users will receive a notification with no sound.",
        "html_description": "<td>Sends the message <a href=\"https://telegram.org/blog/channels-2-0#silent-messages\">silently</a>. Users will receive a notification with no sound.</td>",
        "rst_description": "Sends the message `silently <https://telegram.org/blog/channels-2-0#silent-messages>`_. Users will receive a notification with no sound.\n",
        "name": "disable_notification"
      },
      {
        "type": "Boolean",
        "required": false,
        "description": "Protects the contents of the sent message from forwarding and saving",
        "html_description": "<td>Protects the contents of the sent message from forwarding and saving</td>",
        "rst_description": "Protects the contents of the sent message from forwarding and saving\n",
        "name": "protect_content"
      },
      {
        "type": "ReplyParameters",
        "required": false,
        "description": "Description of the message to reply to",
        "html_description": "<td>Description of the message to reply to</td>",
        "rst_description": "Description of the message to reply to\n",
        "name": "reply_parameters"
      },
      {
        "type": "InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply",
        "required": false,
        "description": "Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user",
        "html_description": "<td>Additional interface options. A JSON-serialized object for an <a href=\"/bots/features#inline-keyboards\">inline keyboard</a>, <a href=\"/bots/features#keyboards\">custom reply keyboard</a>, instructions to remove a reply keyboard or to force a reply from the user</td>",
        "rst_description": "Additional interface options. A JSON-serialized object for an `inline keyboard <https://core.telegram.org/bots/features#inline-keyboards>`_, `custom reply keyboard <https://core.telegram.org/bots/features#keyboards>`_, instructions to remove a reply keyboard or to force a reply from the user\n",
        "name": "reply_markup"
      }
    ],
    "category": "methods"
  }
}
